[{"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox4.jsx":"1","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox5.jsx":"2","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox1.jsx":"3","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox7.jsx":"4","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox6.jsx":"5","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox3.jsx":"6","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox2.jsx":"7","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/pages/NetWorkedSample.jsx":"8","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/index.js":"9","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/App.js":"10","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/pages/Sandbox.jsx":"11","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/pages/Index.jsx":"12","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/index.js":"13","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/NafIndex.js":"14","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/components/networked-scene.js":"15","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/components/networked-audio-source.js":"16","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/components/networked.js":"17","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/Schemas.js":"18","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/utils.js":"19","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/NetworkEntities.js":"20","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/options.js":"21","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/NafLogger.js":"22","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/NetworkConnection.js":"23","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/DeepEquals.js":"24","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/adapters/AdapterFactory.js":"25","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/ChildEntityCache.js":"26","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/adapters/naf-webrtc-adapter.js":"27","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/adapters/naf-socketio-adapter.js":"28","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/pages/SimpleNetwork.jsx":"29","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/hooks/useScript.js":"30","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox8.jsx":"31","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox9.jsx":"32","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox10.jsx":"33","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox11.jsx":"34","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox12.jsx":"35","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox13.jsx":"36","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox14.jsx":"37","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox15.jsx":"38","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox16.jsx":"39","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox17.jsx":"40","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox18.jsx":"41","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox19.jsx":"42","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox20.jsx":"43","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox21.jsx":"44","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox22.jsx":"45","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox23.jsx":"46","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox24.jsx":"47","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox25.jsx":"48","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox26.jsx":"49","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox27.jsx":"50","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox28.jsx":"51","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox29.jsx":"52","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox30.jsx":"53","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox31.jsx":"54","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox32.jsx":"55","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox33.jsx":"56","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox34.jsx":"57","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/colorize.js":"58","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/change-colorize-property.js":"59","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/random-color.js":"60","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/refresh-obj.js":"61","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/play-and-stop.js":"62","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/progressive-controls.js":"63","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/animated-colorize.js":"64","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox35.jsx":"65","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/blink-teleportation.js":"66","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox36.jsx":"67","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/entity-spawner.js":"68","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox37.jsx":"69","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox38.jsx":"70","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/multiple-entities.js":"71","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/spawn-in-circle.js":"72","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/build.js":"73"},{"size":1198,"mtime":1606747022858,"results":"74","hashOfConfig":"75"},{"size":578,"mtime":1606791044381,"results":"76","hashOfConfig":"75"},{"size":1575,"mtime":1607060324992,"results":"77","hashOfConfig":"75"},{"size":2430,"mtime":1606804469142,"results":"78","hashOfConfig":"75"},{"size":608,"mtime":1606749089011,"results":"79","hashOfConfig":"75"},{"size":286,"mtime":1606737621848,"results":"80","hashOfConfig":"75"},{"size":568,"mtime":1606802729429,"results":"81","hashOfConfig":"75"},{"size":2858,"mtime":1607235862653,"results":"82","hashOfConfig":"75"},{"size":1048,"mtime":1607237879858,"results":"83","hashOfConfig":"75"},{"size":510,"mtime":1607237892146,"results":"84","hashOfConfig":"75"},{"size":4211,"mtime":1607235709194,"results":"85","hashOfConfig":"75"},{"size":99,"mtime":1606749984080,"results":"86","hashOfConfig":"75"},{"size":202,"mtime":1607009000534,"results":"87","hashOfConfig":"75"},{"size":711,"mtime":1606986181280,"results":"88","hashOfConfig":"75"},{"size":1906,"mtime":1607020241897,"results":"89","hashOfConfig":"75"},{"size":3398,"mtime":1606986200660,"results":"90","hashOfConfig":"75"},{"size":16633,"mtime":1606985076007,"results":"91","hashOfConfig":"75"},{"size":2852,"mtime":1606985083578,"results":"92","hashOfConfig":"75"},{"size":3277,"mtime":1606985083872,"results":"93","hashOfConfig":"75"},{"size":6493,"mtime":1606985082050,"results":"94","hashOfConfig":"75"},{"size":367,"mtime":1606985082275,"results":"95","hashOfConfig":"75"},{"size":378,"mtime":1606986186519,"results":"96","hashOfConfig":"75"},{"size":6595,"mtime":1606986185323,"results":"97","hashOfConfig":"75"},{"size":1428,"mtime":1606986178468,"results":"98","hashOfConfig":"75"},{"size":1375,"mtime":1606986197504,"results":"99","hashOfConfig":"75"},{"size":578,"mtime":1606986170559,"results":"100","hashOfConfig":"75"},{"size":15630,"mtime":1607019540183,"results":"101","hashOfConfig":"75"},{"size":5810,"mtime":1607019533689,"results":"102","hashOfConfig":"75"},{"size":159,"mtime":1607042419064,"results":"103","hashOfConfig":"75"},{"size":425,"mtime":1607073016217,"results":"104","hashOfConfig":"75"},{"size":2950,"mtime":1607060641669,"results":"105","hashOfConfig":"75"},{"size":574,"mtime":1607062825475,"results":"106","hashOfConfig":"75"},{"size":1769,"mtime":1607062833644,"results":"107","hashOfConfig":"75"},{"size":2417,"mtime":1607064595611,"results":"108","hashOfConfig":"75"},{"size":3575,"mtime":1607080802482,"results":"109","hashOfConfig":"75"},{"size":1454,"mtime":1607075581002,"results":"110","hashOfConfig":"75"},{"size":959,"mtime":1607075622018,"results":"111","hashOfConfig":"75"},{"size":1315,"mtime":1607075787685,"results":"112","hashOfConfig":"75"},{"size":2234,"mtime":1607075881312,"results":"113","hashOfConfig":"75"},{"size":1271,"mtime":1607076020636,"results":"114","hashOfConfig":"75"},{"size":476,"mtime":1607076679384,"results":"115","hashOfConfig":"75"},{"size":1326,"mtime":1607076940304,"results":"116","hashOfConfig":"75"},{"size":1990,"mtime":1607077314607,"results":"117","hashOfConfig":"75"},{"size":1124,"mtime":1607077534788,"results":"118","hashOfConfig":"75"},{"size":1253,"mtime":1607077567788,"results":"119","hashOfConfig":"75"},{"size":549,"mtime":1607077708866,"results":"120","hashOfConfig":"75"},{"size":748,"mtime":1607077880443,"results":"121","hashOfConfig":"75"},{"size":1101,"mtime":1607078175197,"results":"122","hashOfConfig":"75"},{"size":1590,"mtime":1607078187807,"results":"123","hashOfConfig":"75"},{"size":1576,"mtime":1607078472852,"results":"124","hashOfConfig":"75"},{"size":2165,"mtime":1607078786716,"results":"125","hashOfConfig":"75"},{"size":2194,"mtime":1607079039849,"results":"126","hashOfConfig":"75"},{"size":1174,"mtime":1607079217015,"results":"127","hashOfConfig":"75"},{"size":702,"mtime":1607234957817,"results":"128","hashOfConfig":"75"},{"size":832,"mtime":1607234968358,"results":"129","hashOfConfig":"75"},{"size":905,"mtime":1607080749361,"results":"130","hashOfConfig":"75"},{"size":975,"mtime":1607235244372,"results":"131","hashOfConfig":"75"},{"size":578,"mtime":1607080615069,"results":"132","hashOfConfig":"75"},{"size":416,"mtime":1607081003791,"results":"133","hashOfConfig":"75"},{"size":484,"mtime":1607080616987,"results":"134","hashOfConfig":"75"},{"size":249,"mtime":1607080980371,"results":"135","hashOfConfig":"75"},{"size":430,"mtime":1607080996574,"results":"136","hashOfConfig":"75"},{"size":8845,"mtime":1607235170690,"results":"137","hashOfConfig":"75"},{"size":1535,"mtime":1607235389681,"results":"138","hashOfConfig":"75"},{"size":975,"mtime":1607235273178,"results":"139","hashOfConfig":"75"},{"size":2631,"mtime":1607235514479,"results":"140","hashOfConfig":"75"},{"size":1357,"mtime":1607235473834,"results":"141","hashOfConfig":"75"},{"size":938,"mtime":1607235625413,"results":"142","hashOfConfig":"75"},{"size":481,"mtime":1607235608254,"results":"143","hashOfConfig":"75"},{"size":1157,"mtime":1607235682891,"results":"144","hashOfConfig":"75"},{"size":1871,"mtime":1607235725421,"results":"145","hashOfConfig":"75"},{"size":1051,"mtime":1607236087299,"results":"146","hashOfConfig":"75"},{"size":76606,"mtime":1607236953990,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},"sdomkc",{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"151"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"151"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"151"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"151"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"151"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"151"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"151"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"151"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"151"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"151"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"151"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"151"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"151"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"151"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"151"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"151"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"151"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"151"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"151"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"151"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"151"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"151"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"151"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"151"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"151"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"151"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"151"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"151"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"151"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"151"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"151"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox4.jsx",["327","328"],"import { Scene, Entity } from 'aframe-react';\n\nexport default function Sandbox() {\n  return (\n    <Scene>\n      <a-assets>\n        <img id=\"floor\" src=\"/assets/img/floor.jpg\" />\n        <img id=\"bloodhound\" src=\"/assets/img/bloodhound.png\" />\n      </a-assets>\n\n      <Entity\n        primitive=\"a-plane\"\n        src=\"#floor\"\n        shader=\"flat\"\n        rotation=\"-90 0 0\"\n        scale=\"5 5 1\"\n      ></Entity>\n\n      <Entity\n        primitive=\"a-cylinder\"\n        color=\"#AA0000\"\n        radius=\"0.5\"\n        height=\"2\"\n        position=\"-2 1 0\"\n      ></Entity>\n\n      <Entity\n        primitive=\"a-box\"\n        color=\"#00AA00\"\n        height=\"2\"\n        depth=\"4\"\n        position=\"2 1 0\"\n      ></Entity>\n\n      <Entity\n        primitive=\"a-image\"\n        src=\"#bloodhound\"\n        scale=\"2 2 1\"\n        position=\"0 1 0\"\n      ></Entity>\n\n      <Entity position=\"0 0 5\">\n        <Entity primitive=\"a-camera\" active=\"false\"></Entity>\n      </Entity>\n\n      <Entity position=\"0 -0.7 5\">\n        <Entity primitive=\"a-camera\" active=\"true\"></Entity>\n      </Entity>\n\n      <Entity position=\"0 5 5\">\n        <Entity primitive=\"a-camera\" active=\"false\"></Entity>\n      </Entity>\n    </Scene>\n  );\n}\n",["329","330"],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox5.jsx",["331"],"import { Scene, Entity } from 'aframe-react';\n\nexport default function Sandbox() {\n  return (\n    <Scene renderer=\"colorManagement: true\">\n      <a-assets timeout=\"200000\">\n        <img id=\"sky\" src=\"/assets/img/clear-sunny-sky.jpg\" />\n        <a-asset-item\n          id=\"castle_village\"\n          src=\"/assets/model/Space Theatre.glb\"\n        ></a-asset-item>\n      </a-assets>\n\n      <a-sky src=\"#sky\"></a-sky>\n\n      <Entity position=\"-20 0 0\">\n        <Entity primitive=\"a-camera\" />\n      </Entity>\n\n      <Entity gltf-model=\"#castle_village\"></Entity>\n    </Scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox1.jsx",["332","333","334"],"import { Scene, Entity } from 'aframe-react';\n\nexport default function Sandbox1() {\n  return (\n    <Scene>\n      <a-assets>\n        <img id=\"metal-NRM\" src=\"/assets/img/metal.jpg\" />\n        <img id=\"brick\" src=\"/assets/img/brick.jpg\" />\n        <img id=\"brick-NRM\" src=\"/assets/img/brick.jpg\" />\n      </a-assets>\n\n      <Entity\n        primitive=\"a-box\"\n        color=\"#FFFFFF\"\n        src=\"/assets/img/metal.jpg\"\n        repeat=\"1 1\"\n        normal-map=\"#metal-NRM\"\n        normal-texture-repeat=\"1 1\"\n        normal-scale=\"1 -1\"\n        roughness=\"0.5\"\n        width=\"4\"\n        height=\"4\"\n        depth=\"4\"\n        position=\"-2 1.5 -9\"\n        side=\"back\"\n      ></Entity>\n      <Entity\n        primitive=\"a-box\"\n        material={{\n          color: '#FFFFFF',\n          src: '#brick',\n          repeat: '2 2',\n          normalMap: '#brick-NRM',\n          normalTextureRepeat: '2 2',\n          normalScale: '1 -1',\n          roughness: '0.9',\n        }}\n        width=\"4\"\n        height=\"4\"\n        depth=\"4\"\n        position=\"2 1.5 -9\"\n        side=\"back\"\n      ></Entity>\n\n      <Entity\n        primitive=\"a-sphere\"\n        material={{\n          color: '#0000AA',\n          roughness: '0.2',\n          shader: 'standard',\n        }}\n        radius=\"0.5\"\n        position=\"-2 1.5 -8\"\n      ></Entity>\n      <Entity\n        primitive=\"a-sphere\"\n        material={{\n          color: '#AA0000',\n          roughness: '0.2',\n          shader: 'flat',\n          opacity: '0.5',\n        }}\n        radius=\"0.5\"\n        position=\"2 1.5 -8\"\n      ></Entity>\n    </Scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox7.jsx",["335"],"import { Scene, Entity } from 'aframe-react';\n\nexport default function Sandbox() {\n  return (\n    <Scene>\n      <a-assets>\n        <img id=\"floor\" src=\"/assets/img/floor.jpg\" />\n      </a-assets>\n\n      <Entity\n        primitive=\"a-plane\"\n        src=\"#floor\"\n        shader=\"flat\"\n        rotation=\"-90 0 0\"\n        scale=\"5 5 1\"\n      />\n\n      <Entity position=\"0 0 8\">\n        <Entity primitive=\"a-camera\" />\n      </Entity>\n\n      <Entity\n        primitive=\"a-box\"\n        color=\"#AA0000\"\n        position=\"0 4 0\"\n        animation={{\n          property: 'rotation',\n          to: '0 360 0',\n          loop: true,\n          dur: 5000,\n          easing: 'linear',\n        }}\n      />\n\n      <Entity\n        position=\"0 4 0\"\n        animation={{\n          property: 'rotation',\n          to: '0 -360 0',\n          loop: true,\n          dur: 5000,\n          easing: 'linear',\n        }}\n      >\n        <Entity\n          primitive=\"a-box\"\n          color=\"#00AA00\"\n          position=\"2 0 0\"\n          animation={{\n            property: 'rotation',\n            to: '0 -360 0',\n            loop: true,\n            dur: 5000,\n            easing: 'linear',\n          }}\n        />\n      </Entity>\n\n      <Entity\n        primitive=\"a-box\"\n        color=\"#FFAA00\"\n        position=\"0 0.5 0\"\n        animation={{\n          property: 'position',\n          from: '-2 0.5 -2',\n          to: '-2 0.5 2',\n          loop: true,\n          dir: 'alternate',\n          dur: 3000,\n          easing: 'easeInOutCubic',\n        }}\n      />\n\n      <Entity\n        primitive=\"a-box\"\n        color=\"#FFAA00\"\n        position=\"2 0.5 0\"\n        animation={{\n          property: 'scale',\n          to: '0.2 1 5',\n          loop: true,\n          dir: 'alternate',\n          dur: 3000,\n          easing: 'easeInOutElastic',\n        }}\n      />\n\n      <Entity\n        primitive=\"a-sphere\"\n        color=\"#0000AA\"\n        radius=\"0.5\"\n        position=\"0 2.25 0\"\n        animation={{\n          property: 'material.color',\n          from: '#00AAFF',\n          to: '#0000AA',\n          loop: true,\n          dir: 'alternate',\n          dur: 1500,\n        }}\n      />\n\n      <Entity\n        primitive=\"a-cone\"\n        color=\"#484848\"\n        position=\"0 0.5 0\"\n        animation={{\n          property: 'opacity',\n          from: 1,\n          to: 0,\n          loop: true,\n          dir: 'alternate',\n          dur: 1500,\n        }}\n      />\n    </Scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox6.jsx",["336"],"import { Scene, Entity } from 'aframe-react';\n\nexport default function Sandbox() {\n  return (\n    <Scene renderer=\"colorManagement: true\">\n      <a-assets timeout=\"200000\">\n        <img id=\"sky\" src=\"/assets/img/clear-sunny-sky.jpg\" />\n        <a-asset-item\n          id=\"classroom\"\n          src=\"/assets/model/classroom/scene.gltf\"\n        ></a-asset-item>\n      </a-assets>\n\n      <Entity primitive=\"a-sky\" src=\"#sky\"></Entity>\n\n      <Entity position=\"0 10 0\">\n        <Entity primitive=\"a-camera\" />\n      </Entity>\n\n      <Entity primitive=\"a-gltf-model\" src=\"#classroom\"></Entity>\n    </Scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox3.jsx",["337"],"import { Scene, Entity } from 'aframe-react';\n\nexport default function Sandbox() {\n  return (\n    <Scene>\n      <a-assets>\n        <img id=\"360-panorama\" src=\"/assets/img/360-panorama.jpg\" />\n      </a-assets>\n\n      <Entity primitive=\"a-sky\" src=\"#360-panorama\" />\n    </Scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox2.jsx",["338","339"],"import { Scene, Entity } from 'aframe-react';\n\nexport default function Sandbox() {\n  return (\n    <Scene>\n      <a-assets>\n        <img id=\"floor\" src=\"/assets/img/floor.jpg\" />\n        <img id=\"floor-NRM\" src=\"/assets/img/floor.jpg\" />\n      </a-assets>\n\n      <Entity\n        primitive=\"a-plane\"\n        material={{\n          color: '#FFFFFF',\n          src: '#floor',\n          repeat: '5 5',\n          normalMap: '#floor-NRM',\n          normalTextureRepeat: '5 5',\n        }}\n        rotation=\"-90 0 0\"\n        scale=\"10 10 1\"\n      ></Entity>\n    </Scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/pages/NetWorkedSample.jsx",["340"],"// import 'aframe-randomizer-components';\n// import 'aframe-particle-system-component';\nimport { Scene, Entity } from 'aframe-react';\n\nexport default function NetWorkedSample() {\n  return (\n    <Scene\n      networked-scene=\"\n      room: basic-audio;\n      debug: true;\n      adapter: webrtc;\n      audio: true;\n      serverURL: ws://localhost:8080;\n    \"\n    >\n      <a-assets timeout=\"69000\">\n        <img\n          id=\"grid\"\n          src=\"https://img.gs/bbdkhfbzkk/stretch/https://i.imgur.com/25P1geh.png\"\n          crossorigin=\"anonymous\"\n          alt=\"\"\n        />\n        <img\n          id=\"sky\"\n          src=\"https://i.imgur.com/WqlqEkq.jpg\"\n          crossorigin=\"anonymous\"\n          alt=\"\"\n        />\n\n        <template id=\"avatar-template\">\n          <a-entity class=\"avatar\" networked-audio-source>\n            <a-sphere\n              class=\"head\"\n              color=\"#ffffff\"\n              scale=\"0.45 0.5 0.4\"\n            ></a-sphere>\n            <a-entity class=\"face\" position=\"0 0.05 0\">\n              <a-sphere\n                class=\"eye\"\n                color=\"#efefef\"\n                position=\"0.16 0.1 -0.35\"\n                scale=\"0.12 0.12 0.12\"\n              >\n                <a-sphere\n                  class=\"pupil\"\n                  color=\"#000\"\n                  position=\"0 0 -1\"\n                  scale=\"0.2 0.2 0.2\"\n                ></a-sphere>\n              </a-sphere>\n              <a-sphere\n                class=\"eye\"\n                color=\"#efefef\"\n                position=\"-0.16 0.1 -0.35\"\n                scale=\"0.12 0.12 0.12\"\n              >\n                <a-sphere\n                  class=\"pupil\"\n                  color=\"#000\"\n                  position=\"0 0 -1\"\n                  scale=\"0.2 0.2 0.2\"\n                ></a-sphere>\n              </a-sphere>\n            </a-entity>\n          </a-entity>\n        </template>\n      </a-assets>\n\n      <a-entity\n        id=\"player\"\n        networked=\"template:#avatar-template;attachTemplateToLocal:false;\"\n        camera\n        position=\"0 1.6 0\"\n        spawn-in-circle=\"radius:3\"\n        wasd-controls\n        look-controls\n      >\n        <a-sphere class=\"head\" visible=\"false\"></a-sphere>\n      </a-entity>\n\n      <a-entity\n        position=\"0 0 0\"\n        geometry=\"primitive: plane; width: 10000; height: 10000;\"\n        rotation=\"-90 0 0\"\n        material=\"src: #grid; repeat: 10000 10000; transparent: true; metalness:0.6; roughness: 0.4; sphericalEnvMap: #sky;\"\n      ></a-entity>\n\n      <a-entity\n        light=\"color: #ccccff; intensity: 1; type: ambient;\"\n        visible=\"\"\n      ></a-entity>\n      <a-entity\n        light=\"color: #ffaaff; intensity: 1.5\"\n        position=\"5 5 5\"\n      ></a-entity>\n\n      <a-sky src=\"#sky\" rotation=\"0 -90 0\"></a-sky>\n      <a-entity id=\"particles\" particle-system=\"preset: snow\"></a-entity>\n    </Scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/index.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/App.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/pages/Sandbox.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/pages/Index.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/index.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/NafIndex.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/components/networked-scene.js",["341"],"/* global AFRAME, NAF */\nconsole.log(AFRAME);\nAFRAME.registerComponent('networked-scene', {\n  schema: {\n    serverURL: { default: '/' },\n    app: { default: 'default' },\n    room: { default: 'default' },\n    connectOnLoad: { default: true },\n    onConnect: { default: 'onConnect' },\n    adapter: { default: 'socketio' }, // See https://github.com/networked-aframe/networked-aframe#adapters for list of adapters\n    audio: { default: false }, // Only if adapter supports audio\n    debug: { default: false },\n  },\n\n  init: function () {\n    var el = this.el;\n    this.connect = this.connect.bind(this);\n    el.addEventListener('connect', this.connect);\n    if (this.data.connectOnLoad) {\n      el.emit('connect', null, false);\n    }\n  },\n\n  /**\n   * Connect to signalling server and begin connecting to other clients\n   */\n  connect: function () {\n    NAF.log.setDebug(this.data.debug);\n    NAF.log.write('Networked-Aframe Connecting...');\n\n    this.checkDeprecatedProperties();\n    this.setupNetworkAdapter();\n\n    if (this.hasOnConnectFunction()) {\n      this.callOnConnect();\n    }\n    return NAF.connection.connect(\n      this.data.serverURL,\n      this.data.app,\n      this.data.room,\n      this.data.audio\n    );\n  },\n\n  checkDeprecatedProperties: function () {\n    // No current\n  },\n\n  setupNetworkAdapter: function () {\n    var adapterName = this.data.adapter;\n    var adapter = NAF.adapters.make(adapterName);\n    NAF.connection.setNetworkAdapter(adapter);\n    this.el.emit('adapter-ready', adapter, false);\n  },\n\n  hasOnConnectFunction: function () {\n    return this.data.onConnect != '' && window[this.data.onConnect];\n  },\n\n  callOnConnect: function () {\n    NAF.connection.onConnect(window[this.data.onConnect]);\n  },\n\n  remove: function () {\n    NAF.log.write('networked-scene disconnected');\n    this.el.removeEventListener('connect', this.connect);\n    NAF.connection.disconnect();\n  },\n});\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/components/networked-audio-source.js",["342"],"/* global AFRAME, NAF, THREE */\nvar naf = require('../NafIndex');\n\nAFRAME.registerComponent('networked-audio-source', {\n  schema: {\n    positional: { default: true },\n    distanceModel: {\n      default: 'inverse',\n      oneOf: ['linear', 'inverse', 'exponential'],\n    },\n    maxDistance: { default: 10000 },\n    refDistance: { default: 1 },\n    rolloffFactor: { default: 1 },\n  },\n\n  init: function () {\n    this.listener = null;\n    this.stream = null;\n\n    this._setMediaStream = this._setMediaStream.bind(this);\n\n    NAF.utils.getNetworkedEntity(this.el).then((networkedEl) => {\n      const ownerId = networkedEl.components.networked.data.owner;\n\n      if (ownerId) {\n        NAF.connection.adapter\n          .getMediaStream(ownerId)\n          .then(this._setMediaStream)\n          .catch((e) =>\n            naf.log.error(`Error getting media stream for ${ownerId}`, e)\n          );\n      } else {\n        // Correctly configured local entity, perhaps do something here for enabling debug audio loopback\n      }\n    });\n  },\n\n  update() {\n    this._setPannerProperties();\n  },\n\n  _setMediaStream(newStream) {\n    if (!this.sound) {\n      this.setupSound();\n    }\n\n    if (newStream != this.stream) {\n      if (this.stream) {\n        this.sound.disconnect();\n      }\n      if (newStream) {\n        // Chrome seems to require a MediaStream be attached to an AudioElement before AudioNodes work correctly\n        // We don't want to do this in other browsers, particularly in Safari, which actually plays the audio despite\n        // setting the volume to 0.\n        if (/chrome/i.test(navigator.userAgent)) {\n          this.audioEl = new Audio();\n          this.audioEl.setAttribute('autoplay', 'autoplay');\n          this.audioEl.setAttribute('playsinline', 'playsinline');\n          this.audioEl.srcObject = newStream;\n          this.audioEl.volume = 0; // we don't actually want to hear audio from this element\n        }\n\n        const soundSource = this.sound.context.createMediaStreamSource(\n          newStream\n        );\n        this.sound.setNodeSource(soundSource);\n        this.el.emit('sound-source-set', { soundSource });\n      }\n      this.stream = newStream;\n    }\n  },\n\n  _setPannerProperties() {\n    if (this.sound && this.data.positional) {\n      this.sound.setDistanceModel(this.data.distanceModel);\n      this.sound.setMaxDistance(this.data.maxDistance);\n      this.sound.setRefDistance(this.data.refDistance);\n      this.sound.setRolloffFactor(this.data.rolloffFactor);\n    }\n  },\n\n  remove: function () {\n    if (!this.sound) return;\n\n    this.el.removeObject3D(this.attrName);\n    if (this.stream) {\n      this.sound.disconnect();\n    }\n  },\n\n  setupSound: function () {\n    var el = this.el;\n    var sceneEl = el.sceneEl;\n\n    if (this.sound) {\n      el.removeObject3D(this.attrName);\n    }\n\n    if (!sceneEl.audioListener) {\n      sceneEl.audioListener = new THREE.AudioListener();\n      sceneEl.camera && sceneEl.camera.add(sceneEl.audioListener);\n      sceneEl.addEventListener('camera-set-active', function (evt) {\n        evt.detail.cameraEl.getObject3D('camera').add(sceneEl.audioListener);\n      });\n    }\n    this.listener = sceneEl.audioListener;\n\n    this.sound = this.data.positional\n      ? new THREE.PositionalAudio(this.listener)\n      : new THREE.Audio(this.listener);\n    el.setObject3D(this.attrName, this.sound);\n    this._setPannerProperties();\n  },\n});\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/components/networked.js",["343"],"/* global AFRAME, NAF, THREE */\nvar deepEqual = require('../DeepEquals');\nvar InterpolationBuffer = require('buffered-interpolation');\nvar DEG2RAD = THREE.Math.DEG2RAD;\nvar OBJECT3D_COMPONENTS = ['position', 'rotation', 'scale'];\n\nfunction defaultRequiresUpdate() {\n  let cachedData = null;\n\n  return (newData) => {\n    if (cachedData === null || !deepEqual(cachedData, newData)) {\n      cachedData = AFRAME.utils.clone(newData);\n      return true;\n    }\n\n    return false;\n  };\n}\n\nAFRAME.registerSystem('networked', {\n  init() {\n    this.components = [];\n    this.nextSyncTime = 0;\n  },\n\n  register(component) {\n    this.components.push(component);\n  },\n\n  deregister(component) {\n    const idx = this.components.indexOf(component);\n\n    if (idx > -1) {\n      this.components.splice(idx, 1);\n    }\n  },\n\n  tick: (function () {\n    return function () {\n      if (!NAF.connection.adapter) return;\n      if (this.el.clock.elapsedTime < this.nextSyncTime) return;\n\n      const data = { d: [] };\n\n      for (let i = 0, l = this.components.length; i < l; i++) {\n        const c = this.components[i];\n        if (!c.isMine()) continue;\n        if (!c.el.parentElement) {\n          NAF.log.error('entity registered with system despite being removed');\n          //TODO: Find out why tick is still being called\n          return;\n        }\n\n        const syncData = this.components[i].syncDirty();\n        if (!syncData) continue;\n\n        data.d.push(syncData);\n      }\n\n      if (data.d.length > 0) {\n        NAF.connection.broadcastData('um', data);\n      }\n\n      this.updateNextSyncTime();\n    };\n  })(),\n\n  updateNextSyncTime() {\n    this.nextSyncTime = this.el.clock.elapsedTime + 1 / NAF.options.updateRate;\n  },\n});\n\nAFRAME.registerComponent('networked', {\n  schema: {\n    template: { default: '' },\n    attachTemplateToLocal: { default: true },\n    persistent: { default: false },\n\n    networkId: { default: '' },\n    owner: { default: '' },\n    creator: { default: '' },\n  },\n\n  init: function () {\n    this.OWNERSHIP_GAINED = 'ownership-gained';\n    this.OWNERSHIP_CHANGED = 'ownership-changed';\n    this.OWNERSHIP_LOST = 'ownership-lost';\n\n    this.onOwnershipGainedEvent = {\n      el: this.el,\n    };\n    this.onOwnershipChangedEvent = {\n      el: this.el,\n    };\n    this.onOwnershipLostEvent = {\n      el: this.el,\n    };\n\n    this.conversionEuler = new THREE.Euler();\n    this.conversionEuler.order = 'YXZ';\n    this.bufferInfos = [];\n    this.bufferPosition = new THREE.Vector3();\n    this.bufferQuaternion = new THREE.Quaternion();\n    this.bufferScale = new THREE.Vector3();\n\n    var wasCreatedByNetwork = this.wasCreatedByNetwork();\n\n    this.onConnected = this.onConnected.bind(this);\n\n    this.syncData = {};\n    this.componentSchemas = NAF.schemas.getComponents(this.data.template);\n    this.cachedElements = new Array(this.componentSchemas.length);\n    this.networkUpdatePredicates = this.componentSchemas.map(\n      (x) =>\n        (x.requiresNetworkUpdate && x.requiresNetworkUpdate()) ||\n        defaultRequiresUpdate()\n    );\n\n    // Fill cachedElements array with null elements\n    this.invalidateCachedElements();\n\n    this.initNetworkParent();\n\n    if (this.data.networkId === '') {\n      this.el.setAttribute(this.name, {\n        networkId: NAF.utils.createNetworkId(),\n      });\n    }\n\n    if (wasCreatedByNetwork) {\n      this.firstUpdate();\n    } else {\n      if (this.data.attachTemplateToLocal) {\n        this.attachTemplateToLocal();\n      }\n\n      this.registerEntity(this.data.networkId);\n    }\n\n    this.lastOwnerTime = -1;\n\n    if (NAF.clientId) {\n      this.onConnected();\n    } else {\n      document.body.addEventListener('connected', this.onConnected, false);\n    }\n\n    document.body.dispatchEvent(this.entityCreatedEvent());\n    this.el.dispatchEvent(\n      new CustomEvent('instantiated', { detail: { el: this.el } })\n    );\n    this.el.sceneEl.systems.networked.register(this);\n  },\n\n  attachTemplateToLocal: function () {\n    const template = NAF.schemas.getCachedTemplate(this.data.template);\n    const elAttrs = template.attributes;\n\n    // Merge root element attributes with this entity\n    for (let attrIdx = 0; attrIdx < elAttrs.length; attrIdx++) {\n      this.el.setAttribute(elAttrs[attrIdx].name, elAttrs[attrIdx].value);\n    }\n\n    // Append all child elements\n    while (template.firstElementChild) {\n      this.el.appendChild(template.firstElementChild);\n    }\n  },\n\n  takeOwnership: function () {\n    const owner = this.data.owner;\n    const lastOwnerTime = this.lastOwnerTime;\n    const now = NAF.connection.getServerTime();\n    if (owner && !this.isMine() && lastOwnerTime < now) {\n      this.lastOwnerTime = now;\n      this.removeLerp();\n      this.el.setAttribute('networked', { owner: NAF.clientId });\n      this.syncAll();\n\n      this.onOwnershipGainedEvent.oldOwner = owner;\n      this.el.emit(this.OWNERSHIP_GAINED, this.onOwnershipGainedEvent);\n\n      this.onOwnershipChangedEvent.oldOwner = owner;\n      this.onOwnershipChangedEvent.newOwner = NAF.clientId;\n      this.el.emit(this.OWNERSHIP_CHANGED, this.onOwnershipChangedEvent);\n\n      return true;\n    }\n    return false;\n  },\n\n  wasCreatedByNetwork: function () {\n    return !!this.el.firstUpdateData;\n  },\n\n  initNetworkParent: function () {\n    var parentEl = this.el.parentElement;\n    if (parentEl['components'] && parentEl.components['networked']) {\n      this.parent = parentEl;\n    } else {\n      this.parent = null;\n    }\n  },\n\n  registerEntity: function (networkId) {\n    NAF.entities.registerEntity(networkId, this.el);\n  },\n\n  applyPersistentFirstSync: function () {\n    const { networkId } = this.data;\n    const persistentFirstSync = NAF.entities.getPersistentFirstSync(networkId);\n    if (persistentFirstSync) {\n      this.networkUpdate(persistentFirstSync);\n      NAF.entities.forgetPersistentFirstSync(networkId);\n    }\n  },\n\n  firstUpdate: function () {\n    var entityData = this.el.firstUpdateData;\n    this.networkUpdate(entityData);\n  },\n\n  onConnected: function () {\n    if (this.data.owner === '') {\n      this.lastOwnerTime = NAF.connection.getServerTime();\n      this.el.setAttribute(this.name, {\n        owner: NAF.clientId,\n        creator: NAF.clientId,\n      });\n      setTimeout(() => {\n        //a-primitives attach their components on the next frame; wait for components to be attached before calling syncAll\n        if (!this.el.parentNode) {\n          NAF.log.warn(\n            'Networked element was removed before ever getting the chance to syncAll'\n          );\n          return;\n        }\n        this.syncAll(undefined, true);\n      }, 0);\n    }\n\n    document.body.removeEventListener('connected', this.onConnected, false);\n  },\n\n  isMine: function () {\n    return this.data.owner === NAF.clientId;\n  },\n\n  createdByMe: function () {\n    return this.data.creator === NAF.clientId;\n  },\n\n  tick: function (time, dt) {\n    if (!this.isMine() && NAF.options.useLerp) {\n      for (var i = 0; i < this.bufferInfos.length; i++) {\n        var bufferInfo = this.bufferInfos[i];\n        var buffer = bufferInfo.buffer;\n        var object3D = bufferInfo.object3D;\n        var componentNames = bufferInfo.componentNames;\n        buffer.update(dt);\n        if (componentNames.includes('position')) {\n          object3D.position.copy(buffer.getPosition());\n        }\n        if (componentNames.includes('rotation')) {\n          object3D.quaternion.copy(buffer.getQuaternion());\n        }\n        if (componentNames.includes('scale')) {\n          object3D.scale.copy(buffer.getScale());\n        }\n      }\n    }\n  },\n\n  /* Sending updates */\n\n  syncAll: function (targetClientId, isFirstSync) {\n    if (!this.canSync()) {\n      return;\n    }\n\n    var components = this.gatherComponentsData(true);\n\n    var syncData = this.createSyncData(components, isFirstSync);\n\n    if (targetClientId) {\n      NAF.connection.sendDataGuaranteed(targetClientId, 'u', syncData);\n    } else {\n      NAF.connection.broadcastDataGuaranteed('u', syncData);\n    }\n  },\n\n  syncDirty: function () {\n    if (!this.canSync()) {\n      return;\n    }\n\n    var components = this.gatherComponentsData(false);\n\n    if (components === null) {\n      return;\n    }\n\n    return this.createSyncData(components);\n  },\n\n  getCachedElement(componentSchemaIndex) {\n    var cachedElement = this.cachedElements[componentSchemaIndex];\n\n    if (cachedElement) {\n      return cachedElement;\n    }\n\n    var componentSchema = this.componentSchemas[componentSchemaIndex];\n\n    if (componentSchema.selector) {\n      return (this.cachedElements[componentSchemaIndex] = this.el.querySelector(\n        componentSchema.selector\n      ));\n    } else {\n      return (this.cachedElements[componentSchemaIndex] = this.el);\n    }\n  },\n\n  invalidateCachedElements() {\n    for (var i = 0; i < this.cachedElements.length; i++) {\n      this.cachedElements[i] = null;\n    }\n  },\n\n  gatherComponentsData: function (fullSync) {\n    var componentsData = null;\n\n    for (var i = 0; i < this.componentSchemas.length; i++) {\n      var componentSchema = this.componentSchemas[i];\n      var componentElement = this.getCachedElement(i);\n\n      if (!componentElement) {\n        if (fullSync) {\n          componentsData = componentsData || {};\n          componentsData[i] = null;\n        }\n        continue;\n      }\n\n      var componentName = componentSchema.component\n        ? componentSchema.component\n        : componentSchema;\n      var componentData = componentElement.getAttribute(componentName);\n\n      if (componentData === null) {\n        if (fullSync) {\n          componentsData = componentsData || {};\n          componentsData[i] = null;\n        }\n        continue;\n      }\n\n      var syncedComponentData = componentSchema.property\n        ? componentData[componentSchema.property]\n        : componentData;\n\n      // Use networkUpdatePredicate to check if the component needs to be updated.\n      // Call networkUpdatePredicate first so that it can update any cached values in the event of a fullSync.\n      if (this.networkUpdatePredicates[i](syncedComponentData) || fullSync) {\n        componentsData = componentsData || {};\n        componentsData[i] = syncedComponentData;\n      }\n    }\n\n    return componentsData;\n  },\n\n  createSyncData: function (components, isFirstSync) {\n    var { syncData, data } = this;\n    syncData.networkId = data.networkId;\n    syncData.owner = data.owner;\n    syncData.creator = data.creator;\n    syncData.lastOwnerTime = this.lastOwnerTime;\n    syncData.template = data.template;\n    syncData.persistent = data.persistent;\n    syncData.parent = this.getParentId();\n    syncData.components = components;\n    syncData.isFirstSync = !!isFirstSync;\n    return syncData;\n  },\n\n  canSync: function () {\n    // This client will send a sync if:\n    //\n    // - The client is the owner\n    // - The client is the creator, and the owner is not in the room.\n    //\n    // The reason for the latter case is so the object will still be\n    // properly instantiated if the owner leaves. (Since the object lifetime\n    // is tied to the creator.)\n    if (this.data.owner && this.isMine()) return true;\n    if (!this.createdByMe()) return false;\n\n    const clients = NAF.connection.getConnectedClients();\n\n    for (let clientId in clients) {\n      if (clientId === this.data.owner) return false;\n    }\n\n    return true;\n  },\n\n  getParentId: function () {\n    this.initNetworkParent(); // TODO fix calling this each network tick\n    if (!this.parent) {\n      return null;\n    }\n    var netComp = this.parent.getAttribute('networked');\n    return netComp.networkId;\n  },\n\n  /* Receiving updates */\n\n  networkUpdate: function (entityData) {\n    // Avoid updating components if the entity data received did not come from the current owner.\n    if (\n      entityData.lastOwnerTime < this.lastOwnerTime ||\n      (this.lastOwnerTime === entityData.lastOwnerTime &&\n        this.data.owner > entityData.owner)\n    ) {\n      return;\n    }\n\n    // Hack to solve this bug: https://github.com/networked-aframe/networked-aframe/issues/200\n    if (this.data === undefined) {\n      return;\n    }\n\n    if (this.data.owner !== entityData.owner) {\n      var wasMine = this.isMine();\n      this.lastOwnerTime = entityData.lastOwnerTime;\n\n      const oldOwner = this.data.owner;\n      const newOwner = entityData.owner;\n\n      this.el.setAttribute('networked', { owner: entityData.owner });\n\n      if (wasMine) {\n        this.onOwnershipLostEvent.newOwner = newOwner;\n        this.el.emit(this.OWNERSHIP_LOST, this.onOwnershipLostEvent);\n      }\n      this.onOwnershipChangedEvent.oldOwner = oldOwner;\n      this.onOwnershipChangedEvent.newOwner = newOwner;\n      this.el.emit(this.OWNERSHIP_CHANGED, this.onOwnershipChangedEvent);\n    }\n    if (this.data.persistent !== entityData.persistent) {\n      this.el.setAttribute('networked', { persistent: entityData.persistent });\n    }\n    this.updateNetworkedComponents(entityData.components);\n  },\n\n  updateNetworkedComponents: function (components) {\n    for (\n      var componentIndex = 0, l = this.componentSchemas.length;\n      componentIndex < l;\n      componentIndex++\n    ) {\n      var componentData = components[componentIndex];\n      var componentSchema = this.componentSchemas[componentIndex];\n      var componentElement = this.getCachedElement(componentIndex);\n\n      if (\n        componentElement === null ||\n        componentData === null ||\n        componentData === undefined\n      ) {\n        continue;\n      }\n\n      if (componentSchema.component) {\n        if (componentSchema.property) {\n          this.updateNetworkedComponent(\n            componentElement,\n            componentSchema.component,\n            componentSchema.property,\n            componentData\n          );\n        } else {\n          this.updateNetworkedComponent(\n            componentElement,\n            componentSchema.component,\n            componentData\n          );\n        }\n      } else {\n        this.updateNetworkedComponent(\n          componentElement,\n          componentSchema,\n          componentData\n        );\n      }\n    }\n  },\n\n  updateNetworkedComponent: function (el, componentName, data, value) {\n    if (!NAF.options.useLerp || !OBJECT3D_COMPONENTS.includes(componentName)) {\n      if (value === undefined) {\n        el.setAttribute(componentName, data);\n      } else {\n        el.setAttribute(componentName, data, value);\n      }\n      return;\n    }\n\n    let bufferInfo;\n\n    for (let i = 0, l = this.bufferInfos.length; i < l; i++) {\n      const info = this.bufferInfos[i];\n\n      if (info.object3D === el.object3D) {\n        bufferInfo = info;\n        break;\n      }\n    }\n\n    if (!bufferInfo) {\n      bufferInfo = {\n        buffer: new InterpolationBuffer(InterpolationBuffer.MODE_LERP, 0.1),\n        object3D: el.object3D,\n        componentNames: [componentName],\n      };\n      this.bufferInfos.push(bufferInfo);\n    } else {\n      var componentNames = bufferInfo.componentNames;\n      if (!componentNames.includes(componentName)) {\n        componentNames.push(componentName);\n      }\n    }\n    var buffer = bufferInfo.buffer;\n\n    switch (componentName) {\n      case 'position':\n        buffer.setPosition(this.bufferPosition.set(data.x, data.y, data.z));\n        return;\n      case 'rotation':\n        this.conversionEuler.set(\n          DEG2RAD * data.x,\n          DEG2RAD * data.y,\n          DEG2RAD * data.z\n        );\n        buffer.setQuaternion(\n          this.bufferQuaternion.setFromEuler(this.conversionEuler)\n        );\n        return;\n      case 'scale':\n        buffer.setScale(this.bufferScale.set(data.x, data.y, data.z));\n        return;\n    }\n    NAF.log.error(\n      'Could not set value in interpolation buffer.',\n      el,\n      componentName,\n      data,\n      bufferInfo\n    );\n  },\n\n  removeLerp: function () {\n    this.bufferInfos = [];\n  },\n\n  remove: function () {\n    if (this.isMine() && NAF.connection.isConnected()) {\n      var syncData = { networkId: this.data.networkId };\n      if (NAF.entities.hasEntity(this.data.networkId)) {\n        NAF.connection.broadcastDataGuaranteed('r', syncData);\n      } else {\n        NAF.log.error(\n          'Removing networked entity that is not in entities array.'\n        );\n      }\n    }\n    NAF.entities.forgetEntity(this.data.networkId);\n    document.body.dispatchEvent(this.entityRemovedEvent(this.data.networkId));\n    this.el.sceneEl.systems.networked.deregister(this);\n  },\n\n  entityCreatedEvent() {\n    return new CustomEvent('entityCreated', { detail: { el: this.el } });\n  },\n\n  entityRemovedEvent(networkId) {\n    return new CustomEvent('entityRemoved', {\n      detail: { networkId: networkId },\n    });\n  },\n});\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/Schemas.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/utils.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/NetworkEntities.js",["344"],"/* global NAF */\nvar ChildEntityCache = require('./ChildEntityCache');\n\nclass NetworkEntities {\n  constructor() {\n    this.entities = {};\n    this.childCache = new ChildEntityCache();\n    this.onRemoteEntityCreatedEvent = new Event('remoteEntityCreated');\n    this._persistentFirstSyncs = {};\n  }\n\n  registerEntity(networkId, entity) {\n    this.entities[networkId] = entity;\n  }\n\n  createRemoteEntity(entityData) {\n    NAF.log.write('Creating remote entity', entityData);\n\n    var networkId = entityData.networkId;\n    var el = NAF.schemas.getCachedTemplate(entityData.template);\n\n    el.setAttribute('id', 'naf-' + networkId);\n\n    this.initPosition(el, entityData.components);\n    this.initRotation(el, entityData.components);\n    this.addNetworkComponent(el, entityData);\n\n    this.registerEntity(networkId, el);\n\n    return el;\n  }\n\n  initPosition(entity, componentData) {\n    var hasPosition = componentData['position'];\n    if (hasPosition) {\n      var position = componentData.position;\n      entity.setAttribute('position', position);\n    }\n  }\n\n  initRotation(entity, componentData) {\n    var hasRotation = componentData['rotation'];\n    if (hasRotation) {\n      var rotation = componentData.rotation;\n      entity.setAttribute('rotation', rotation);\n    }\n  }\n\n  addNetworkComponent(entity, entityData) {\n    var networkData = {\n      template: entityData.template,\n      creator: entityData.creator,\n      owner: entityData.owner,\n      networkId: entityData.networkId,\n      persistent: entityData.persistent,\n    };\n\n    entity.setAttribute('networked', networkData);\n    entity.firstUpdateData = entityData;\n  }\n\n  updateEntityMulti(client, dataType, entityDatas, source) {\n    if (NAF.options.syncSource && source !== NAF.options.syncSource) return;\n    for (let i = 0, l = entityDatas.d.length; i < l; i++) {\n      this.updateEntity(client, 'u', entityDatas.d[i], source);\n    }\n  }\n\n  updateEntity(client, dataType, entityData, source) {\n    if (NAF.options.syncSource && source !== NAF.options.syncSource) return;\n    var networkId = entityData.networkId;\n\n    if (this.hasEntity(networkId)) {\n      this.entities[networkId].components.networked.networkUpdate(entityData);\n    } else if (entityData.isFirstSync) {\n      if (\n        NAF.options.firstSyncSource &&\n        source !== NAF.options.firstSyncSource\n      ) {\n        NAF.log.write('Ignoring first sync from disallowed source', source);\n      } else {\n        if (entityData.persistent) {\n          // If we receive a firstSync for a persistent entity that we don't have yet,\n          // we assume the scene will create it at some point, so stash the update for later use.\n          this._persistentFirstSyncs[networkId] = entityData;\n        } else {\n          this.receiveFirstUpdateFromEntity(entityData);\n        }\n      }\n    }\n  }\n\n  receiveFirstUpdateFromEntity(entityData) {\n    var parent = entityData.parent;\n    var networkId = entityData.networkId;\n\n    var parentNotCreatedYet = parent && !this.hasEntity(parent);\n    if (parentNotCreatedYet) {\n      this.childCache.addChild(parent, entityData);\n    } else {\n      var remoteEntity = this.createRemoteEntity(entityData);\n      this.createAndAppendChildren(networkId, remoteEntity);\n      this.addEntityToPage(remoteEntity, parent);\n    }\n  }\n\n  createAndAppendChildren(parentId, parentEntity) {\n    var children = this.childCache.getChildren(parentId);\n    for (var i = 0; i < children.length; i++) {\n      var childEntityData = children[i];\n      var childId = childEntityData.networkId;\n      if (this.hasEntity(childId)) {\n        NAF.log.warn(\n          'Tried to instantiate entity multiple times',\n          childId,\n          childEntityData,\n          'Existing entity:',\n          this.getEntity(childId)\n        );\n        continue;\n      }\n      var childEntity = this.createRemoteEntity(childEntityData);\n      this.createAndAppendChildren(childId, childEntity);\n      parentEntity.appendChild(childEntity);\n    }\n  }\n\n  addEntityToPage(entity, parentId) {\n    if (this.hasEntity(parentId)) {\n      this.addEntityToParent(entity, parentId);\n    } else {\n      this.addEntityToSceneRoot(entity);\n    }\n  }\n\n  addEntityToParent(entity, parentId) {\n    var parentEl = document.getElementById('naf-' + parentId);\n    parentEl.appendChild(entity);\n  }\n\n  addEntityToSceneRoot(el) {\n    var scene = document.querySelector('a-scene');\n    scene.appendChild(el);\n  }\n\n  completeSync(targetClientId, isFirstSync) {\n    for (var id in this.entities) {\n      if (this.entities[id]) {\n        this.entities[id].components.networked.syncAll(\n          targetClientId,\n          isFirstSync\n        );\n      }\n    }\n  }\n\n  removeRemoteEntity(toClient, dataType, data, source) {\n    if (NAF.options.syncSource && source !== NAF.options.syncSource) return;\n    var id = data.networkId;\n    return this.removeEntity(id);\n  }\n\n  removeEntitiesOfClient(clientId) {\n    var entityList = [];\n    for (var id in this.entities) {\n      var entityCreator = NAF.utils.getCreator(this.entities[id]);\n      if (entityCreator === clientId) {\n        let persists;\n        const component = this.entities[id].getAttribute('networked');\n        if (component && component.persistent) {\n          persists = NAF.utils.takeOwnership(this.entities[id]);\n        }\n        if (!persists) {\n          var entity = this.removeEntity(id);\n          entityList.push(entity);\n        }\n      }\n    }\n    return entityList;\n  }\n\n  removeEntity(id) {\n    this.forgetPersistentFirstSync(id);\n\n    if (this.hasEntity(id)) {\n      var entity = this.entities[id];\n      this.forgetEntity(id);\n      entity.parentNode.removeChild(entity);\n      return entity;\n    } else {\n      NAF.log.error(\"Tried to remove entity I don't have.\");\n      return null;\n    }\n  }\n\n  forgetEntity(id) {\n    delete this.entities[id];\n    this.forgetPersistentFirstSync(id);\n  }\n\n  getPersistentFirstSync(id) {\n    return this._persistentFirstSyncs[id];\n  }\n\n  forgetPersistentFirstSync(id) {\n    delete this._persistentFirstSyncs[id];\n  }\n\n  getEntity(id) {\n    if (this.entities[id]) {\n      return this.entities[id];\n    }\n    return null;\n  }\n\n  hasEntity(id) {\n    return !!this.entities[id];\n  }\n\n  removeRemoteEntities() {\n    this.childCache = new ChildEntityCache();\n\n    for (var id in this.entities) {\n      var owner = this.entities[id].getAttribute('networked').owner;\n      if (owner != NAF.clientId) {\n        this.removeEntity(id);\n      }\n    }\n  }\n}\n\nmodule.exports = NetworkEntities;\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/options.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/NafLogger.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/NetworkConnection.js",["345","346"],"/* global NAF */\nvar ReservedDataType = { Update: 'u', UpdateMulti: 'um', Remove: 'r' };\n\nclass NetworkConnection {\n  constructor(networkEntities) {\n    this.entities = networkEntities;\n    this.setupDefaultDataSubscriptions();\n\n    this.connectedClients = {};\n    this.activeDataChannels = {};\n  }\n\n  setNetworkAdapter(adapter) {\n    this.adapter = adapter;\n  }\n\n  setupDefaultDataSubscriptions() {\n    this.dataChannelSubs = {};\n\n    this.dataChannelSubs[\n      ReservedDataType.Update\n    ] = this.entities.updateEntity.bind(this.entities);\n\n    this.dataChannelSubs[\n      ReservedDataType.UpdateMulti\n    ] = this.entities.updateEntityMulti.bind(this.entities);\n\n    this.dataChannelSubs[\n      ReservedDataType.Remove\n    ] = this.entities.removeRemoteEntity.bind(this.entities);\n  }\n\n  connect(serverUrl, appName, roomName, enableAudio = false) {\n    NAF.app = appName;\n    NAF.room = roomName;\n\n    this.adapter.setServerUrl(serverUrl);\n    this.adapter.setApp(appName);\n    this.adapter.setRoom(roomName);\n\n    var webrtcOptions = {\n      audio: enableAudio,\n      video: false,\n      datachannel: true,\n    };\n    this.adapter.setWebRtcOptions(webrtcOptions);\n\n    this.adapter.setServerConnectListeners(\n      this.connectSuccess.bind(this),\n      this.connectFailure.bind(this)\n    );\n    this.adapter.setDataChannelListeners(\n      this.dataChannelOpen.bind(this),\n      this.dataChannelClosed.bind(this),\n      this.receivedData.bind(this)\n    );\n    this.adapter.setRoomOccupantListener(this.occupantsReceived.bind(this));\n\n    return this.adapter.connect();\n  }\n\n  onConnect(callback) {\n    this.onConnectCallback = callback;\n\n    if (this.isConnected()) {\n      callback();\n    } else {\n      document.body.addEventListener('connected', callback, false);\n    }\n  }\n\n  connectSuccess(clientId) {\n    NAF.log.write('Networked-Aframe Client ID:', clientId);\n    NAF.clientId = clientId;\n\n    var evt = new CustomEvent('connected', { detail: { clientId: clientId } });\n    document.body.dispatchEvent(evt);\n  }\n\n  connectFailure(errorCode, message) {\n    NAF.log.error(errorCode, 'failure to connect');\n  }\n\n  occupantsReceived(occupantList) {\n    var prevConnectedClients = Object.assign({}, this.connectedClients);\n    this.connectedClients = occupantList;\n    this.checkForDisconnectingClients(prevConnectedClients, occupantList);\n    this.checkForConnectingClients(occupantList);\n  }\n\n  checkForDisconnectingClients(oldOccupantList, newOccupantList) {\n    for (var id in oldOccupantList) {\n      var clientFound = newOccupantList[id];\n      if (!clientFound) {\n        NAF.log.write('Closing stream to ', id);\n        this.adapter.closeStreamConnection(id);\n      }\n    }\n  }\n\n  // Some adapters will handle this internally\n  checkForConnectingClients(occupantList) {\n    for (var id in occupantList) {\n      var startConnection =\n        this.isNewClient(id) &&\n        this.adapter.shouldStartConnectionTo(occupantList[id]);\n      if (startConnection) {\n        NAF.log.write('Opening datachannel to ', id);\n        this.adapter.startStreamConnection(id);\n      }\n    }\n  }\n\n  getConnectedClients() {\n    return this.connectedClients;\n  }\n\n  isConnected() {\n    return !!NAF.clientId;\n  }\n\n  isMineAndConnected(clientId) {\n    return this.isConnected() && NAF.clientId === clientId;\n  }\n\n  isNewClient(clientId) {\n    return !this.isConnectedTo(clientId);\n  }\n\n  isConnectedTo(clientId) {\n    return (\n      this.adapter.getConnectStatus(clientId) === NAF.adapters.IS_CONNECTED\n    );\n  }\n\n  dataChannelOpen(clientId) {\n    NAF.log.write('Opened data channel from ' + clientId);\n    this.activeDataChannels[clientId] = true;\n    this.entities.completeSync(clientId, true);\n\n    var evt = new CustomEvent('clientConnected', {\n      detail: { clientId: clientId },\n    });\n    document.body.dispatchEvent(evt);\n  }\n\n  dataChannelClosed(clientId) {\n    NAF.log.write('Closed data channel from ' + clientId);\n    this.activeDataChannels[clientId] = false;\n    this.entities.removeEntitiesOfClient(clientId);\n\n    var evt = new CustomEvent('clientDisconnected', {\n      detail: { clientId: clientId },\n    });\n    document.body.dispatchEvent(evt);\n  }\n\n  hasActiveDataChannel(clientId) {\n    return !!(\n      this.activeDataChannels[clientId] && this.activeDataChannels[clientId]\n    );\n  }\n\n  broadcastData(dataType, data) {\n    this.adapter.broadcastData(dataType, data);\n  }\n\n  broadcastDataGuaranteed(dataType, data) {\n    this.adapter.broadcastDataGuaranteed(dataType, data);\n  }\n\n  sendData(toClientId, dataType, data, guaranteed) {\n    if (this.hasActiveDataChannel(toClientId)) {\n      if (guaranteed) {\n        this.adapter.sendDataGuaranteed(toClientId, dataType, data);\n      } else {\n        this.adapter.sendData(toClientId, dataType, data);\n      }\n    } else {\n      // console.error(\"NOT-CONNECTED\", \"not connected to \" + toClient);\n    }\n  }\n\n  sendDataGuaranteed(toClientId, dataType, data) {\n    this.sendData(toClientId, dataType, data, true);\n  }\n\n  subscribeToDataChannel(dataType, callback) {\n    if (this.isReservedDataType(dataType)) {\n      NAF.log.error(\n        'NetworkConnection@subscribeToDataChannel: ' +\n          dataType +\n          ' is a reserved dataType. Choose another'\n      );\n      return;\n    }\n    this.dataChannelSubs[dataType] = callback;\n  }\n\n  unsubscribeToDataChannel(dataType) {\n    if (this.isReservedDataType(dataType)) {\n      NAF.log.error(\n        'NetworkConnection@unsubscribeToDataChannel: ' +\n          dataType +\n          ' is a reserved dataType. Choose another'\n      );\n      return;\n    }\n    delete this.dataChannelSubs[dataType];\n  }\n\n  isReservedDataType(dataType) {\n    return (\n      dataType == ReservedDataType.Update || dataType == ReservedDataType.Remove\n    );\n  }\n\n  receivedData(fromClientId, dataType, data, source) {\n    if (this.dataChannelSubs[dataType]) {\n      this.dataChannelSubs[dataType](fromClientId, dataType, data, source);\n    } else {\n      NAF.log.write(\n        'NetworkConnection@receivedData: ' +\n          dataType +\n          ' has not been subscribed to yet. Call subscribeToDataChannel()'\n      );\n    }\n  }\n\n  getServerTime() {\n    return this.adapter.getServerTime();\n  }\n\n  disconnect() {\n    this.entities.removeRemoteEntities();\n    this.adapter.disconnect();\n\n    NAF.app = '';\n    NAF.room = '';\n    NAF.clientId = '';\n    this.connectedClients = {};\n    this.activeDataChannels = {};\n    this.adapter = null;\n\n    this.setupDefaultDataSubscriptions();\n\n    document.body.removeEventListener('connected', this.onConnectCallback);\n  }\n}\n\nmodule.exports = NetworkConnection;\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/DeepEquals.js",["347","348","349","350","351","352","353","354"],"// Patched version of fast-deep-equal which does not\n// allocate memory via calling Object.keys\n//\n// https://github.com/epoberezkin/fast-deep-equal/blob/master/index.js\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a),\n      arrB = isArray(b),\n      i,\n      length,\n      key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0; ) if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date,\n      dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp,\n      regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length) return false;\n\n    for (i = length; i-- !== 0; ) if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0; ) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a !== a && b !== b;\n};\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/adapters/AdapterFactory.js",["355"],"const WebrtcAdapter = require('./naf-webrtc-adapter');\nconst SocketioAdapter = require('./naf-socketio-adapter');\n\nclass AdapterFactory {\n  constructor() {\n    this.adapters = {\n      socketio: SocketioAdapter,\n      webrtc: WebrtcAdapter,\n    };\n\n    this.IS_CONNECTED = AdapterFactory.IS_CONNECTED;\n    this.CONNECTING = AdapterFactory.CONNECTING;\n    this.NOT_CONNECTED = AdapterFactory.NOT_CONNECTED;\n  }\n\n  register(adapterName, AdapterClass) {\n    this.adapters[adapterName] = AdapterClass;\n  }\n\n  make(adapterName) {\n    var name = adapterName.toLowerCase();\n    if (this.adapters[name]) {\n      var AdapterClass = this.adapters[name];\n      return new AdapterClass();\n    } else if (name === 'easyrtc' || name == 'wseasyrtc') {\n      throw new Error(\n        'Adapter: ' +\n          adapterName +\n          ' not registered. EasyRTC support was removed in Networked-Aframe 0.7.0.' +\n          ' To use the deprecated EasyRTC adapter see https://github.com/networked-aframe/naf-easyrtc-adapter'\n      );\n    } else {\n      throw new Error(\n        'Adapter: ' +\n          adapterName +\n          ' not registered. Please use NAF.adapters.register() to register this adapter.'\n      );\n    }\n  }\n}\n\nAdapterFactory.IS_CONNECTED = 'IS_CONNECTED';\nAdapterFactory.CONNECTING = 'CONNECTING';\nAdapterFactory.NOT_CONNECTED = 'NOT_CONNECTED';\n\nmodule.exports = AdapterFactory;\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/ChildEntityCache.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/adapters/naf-webrtc-adapter.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/adapters/naf-socketio-adapter.js",["356","357"],"/* eslint-disable no-restricted-globals */\n/* global NAF, io */\n\n/**\n * SocketIO Adapter (socketio)\n * networked-scene: serverURL needs to be ws://localhost:8080 when running locally\n */\nclass SocketioAdapter {\n  constructor() {\n    if (io === undefined)\n      console.warn(\n        'It looks like socket.io has not been loaded before SocketioAdapter. Please do that.'\n      );\n\n    this.app = 'default';\n    this.room = 'default';\n    this.occupantListener = null;\n    this.myRoomJoinTime = null;\n    this.myId = null;\n\n    this.occupants = {}; // id -> joinTimestamp\n    this.connectedClients = [];\n\n    this.serverTimeRequests = 0;\n    this.timeOffsets = [];\n    this.avgTimeOffset = 0;\n  }\n\n  setServerUrl(wsUrl) {\n    this.wsUrl = wsUrl;\n  }\n\n  setApp(appName) {\n    this.app = appName;\n  }\n\n  setRoom(roomName) {\n    this.room = roomName;\n  }\n\n  setWebRtcOptions(options) {\n    // No WebRTC support\n  }\n\n  setServerConnectListeners(successListener, failureListener) {\n    this.connectSuccess = successListener;\n    this.connectFailure = failureListener;\n  }\n\n  setRoomOccupantListener(occupantListener) {\n    this.occupantListener = occupantListener;\n  }\n\n  setDataChannelListeners(openListener, closedListener, messageListener) {\n    this.openListener = openListener;\n    this.closedListener = closedListener;\n    this.messageListener = messageListener;\n  }\n\n  connect() {\n    const self = this;\n\n    this.updateTimeOffset().then(() => {\n      if (!self.wsUrl || self.wsUrl === '/') {\n        if (location.protocol === 'https:') {\n          self.wsUrl = 'wss://' + location.hostname + ':8080';\n        } else {\n          self.wsUrl = 'ws://' + location.hostname + ':8080';\n        }\n      }\n\n      NAF.log.write('self wsurl 1', self.wsUrl);\n\n      NAF.log.write('Attempting to connect to socket.io');\n      const socket = (self.socket = io(self.wsUrl));\n\n      socket.on('connect', () => {\n        NAF.log.write('User connected', socket.id);\n        self.myId = socket.id;\n        self.joinRoom();\n      });\n\n      socket.on('connectSuccess', (data) => {\n        const { joinedTime } = data;\n\n        self.myRoomJoinTime = joinedTime;\n        NAF.log.write(\n          'Successfully joined room',\n          self.room,\n          'at server time',\n          joinedTime\n        );\n\n        self.connectSuccess(self.myId);\n      });\n\n      socket.on('error', (err) => {\n        console.error('Socket connection failure', err);\n        self.connectFailure();\n      });\n\n      socket.on('occupantsChanged', (data) => {\n        const { occupants } = data;\n        NAF.log.write('occupants changed', data);\n        self.receivedOccupants(occupants);\n      });\n\n      function receiveData(packet) {\n        const from = packet.from;\n        const type = packet.type;\n        const data = packet.data;\n        self.messageListener(from, type, data);\n      }\n\n      socket.on('send', receiveData);\n      socket.on('broadcast', receiveData);\n    });\n  }\n\n  joinRoom() {\n    NAF.log.write('Joining room', this.room);\n    this.socket.emit('joinRoom', { room: this.room });\n  }\n\n  receivedOccupants(occupants) {\n    delete occupants[this.myId];\n    this.occupants = occupants;\n    this.occupantListener(occupants);\n  }\n\n  shouldStartConnectionTo(client) {\n    return true;\n  }\n\n  startStreamConnection(remoteId) {\n    this.connectedClients.push(remoteId);\n    this.openListener(remoteId);\n  }\n\n  closeStreamConnection(clientId) {\n    this.connectedClients = this.connectedClients.filter((c) => c != clientId);\n    this.closedListener(clientId);\n  }\n\n  getConnectStatus(clientId) {\n    var connected = this.connectedClients.indexOf(clientId) != -1;\n\n    if (connected) {\n      return NAF.adapters.IS_CONNECTED;\n    } else {\n      return NAF.adapters.NOT_CONNECTED;\n    }\n  }\n\n  sendData(to, type, data) {\n    this.sendDataGuaranteed(to, type, data);\n  }\n\n  sendDataGuaranteed(to, type, data) {\n    const packet = {\n      from: this.myId,\n      to,\n      type,\n      data,\n      sending: true,\n    };\n\n    if (this.socket) {\n      this.socket.emit('send', packet);\n    } else {\n      NAF.log.warn('SocketIO socket not created yet');\n    }\n  }\n\n  broadcastData(type, data) {\n    this.broadcastDataGuaranteed(type, data);\n  }\n\n  broadcastDataGuaranteed(type, data) {\n    const packet = {\n      from: this.myId,\n      type,\n      data,\n      broadcasting: true,\n    };\n\n    if (this.socket) {\n      this.socket.emit('broadcast', packet);\n    } else {\n      NAF.log.warn('SocketIO socket not created yet');\n    }\n  }\n\n  getMediaStream(clientId) {\n    // Do not support WebRTC\n  }\n\n  updateTimeOffset() {\n    const clientSentTime = Date.now() + this.avgTimeOffset;\n\n    return fetch(document.location.href, {\n      method: 'HEAD',\n      cache: 'no-cache',\n    }).then((res) => {\n      var precision = 1000;\n      var serverReceivedTime =\n        new Date(res.headers.get('Date')).getTime() + precision / 2;\n      var clientReceivedTime = Date.now();\n      var serverTime =\n        serverReceivedTime + (clientReceivedTime - clientSentTime) / 2;\n      var timeOffset = serverTime - clientReceivedTime;\n\n      this.serverTimeRequests++;\n\n      if (this.serverTimeRequests <= 10) {\n        this.timeOffsets.push(timeOffset);\n      } else {\n        this.timeOffsets[this.serverTimeRequests % 10] = timeOffset;\n      }\n\n      this.avgTimeOffset =\n        this.timeOffsets.reduce((acc, offset) => (acc += offset), 0) /\n        this.timeOffsets.length;\n\n      if (this.serverTimeRequests > 10) {\n        setTimeout(() => this.updateTimeOffset(), 5 * 60 * 1000); // Sync clock every 5 minutes.\n      } else {\n        this.updateTimeOffset();\n      }\n    });\n  }\n\n  getServerTime() {\n    return new Date().getTime() + this.avgTimeOffset;\n  }\n}\n\n// NAF.adapters.register(\"socketio\", SocketioAdapter);\n\nmodule.exports = SocketioAdapter;\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/pages/SimpleNetwork.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/hooks/useScript.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox8.jsx",["358","359","360"],"import { Scene, Entity } from 'aframe-react';\n\nexport default function Sandbox() {\n  return (\n    <Scene>\n      <a-assets>\n        <img id=\"floor\" src=\"/assets/img/floor.jpg\" />\n        <img id=\"firefox\" src=\"/assets/img/firefox-quantum-1024.png\" />\n        <a-asset-item id=\"room\" src=\"/assets/model/room.gltf\"></a-asset-item>\n      </a-assets>\n\n      <a-sky color=\"#212121\"></a-sky>\n\n      <a-plane\n        src=\"#floor\"\n        rotation=\"-90 0 0\"\n        scale=\"10000 10000 1\"\n        repeat=\"1000 1000\"\n        shadow=\"receive: true\"\n      ></a-plane>\n\n      <a-entity position=\"0 0 5\">\n        <a-camera></a-camera>\n      </a-entity>\n\n      <a-entity gltf-model=\"#room\" shadow=\"receive: true\"></a-entity>\n\n      <a-image src=\"#firefox\" scale=\"2 2 1\" position=\"-2 3 -2.49\"></a-image>\n\n      <a-box\n        color=\"#E0E0E0\"\n        scale=\"5 0.1 1\"\n        position=\"0 4 0\"\n        shadow=\"cast: true\"\n      ></a-box>\n\n      <a-box\n        color=\"#FFEB3B\"\n        scale=\"0.5 0.5 0.5\"\n        position=\"-1 1 0\"\n        shadow=\"cast: true\"\n        shader=\"flat\"\n        animation=\"property: rotation;\n                              to: 0 360 0;\n                              loop: true;\n                              dur: 5000;\n                              easing: linear\"\n      ></a-box>\n\n      <a-box\n        id=\"orange-box\"\n        color=\"#FF5722\"\n        scale=\"0.5 0.5 0.5\"\n        position=\"1 1 0\"\n        shadow=\"cast: true\"\n        animation__1=\"property: rotation;\n                                 to: 0 360 0;\n                                 loop: true;\n                                 dur: 5000;\n                                 easing: linear\"\n        animation__2=\"property: position;\n                                 to: 1 1 -2;\n                                 loop: true;\n                                 dir: alternate;\n                                 dur: 5000;\n                                 easing: easeInOutCubic\"\n      ></a-box>\n\n      <a-entity\n        light=\"type: ambient;\n                             intensity: 0.2\"\n      ></a-entity>\n\n      <a-entity\n        light=\"type: point;\n                             intensity: 0.8;\n                             distance: 10;\n                             castShadow: true\"\n        position=\"0 2 1.5\"\n        animation=\"property: light.intensity;\n                                 from: 0.8;\n                                 to: 0;\n                                 loop: true;\n                                 dir: alternate;\n                                 dur: 5000;\n                                 easing: easeInOutCubic\"\n      ></a-entity>\n\n      <a-entity\n        light=\"type: spot;\n                             target: #orange-box;\n                             color: #C40070;\n                             angle: 30;\n                             penumbra: 0.1;\n                             castShadow: true\"\n        position=\"0 3 1\"\n      ></a-entity>\n    </Scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox9.jsx",["361"],"import { Scene, Entity } from 'aframe-react';\n\nexport default function Sandbox() {\n  return (\n    <Scene>\n      <a-camera>\n        <a-entity\n          cursor\n          position=\"0 0 -1\"\n          geometry=\"primitive: sphere; radius: 0.005\"\n          material=\"color: #FFFFFF; shader: flat; opacity: 0.5\"\n        ></a-entity>\n      </a-camera>\n\n      <a-sky color=\"#212121\"></a-sky>\n\n      <a-box color=\"#AA0000\" position=\"-2 0 -7\"></a-box>\n\n      <a-box color=\"#AA0000\" position=\"0 0 -7\"></a-box>\n\n      <a-box color=\"#AA0000\" position=\"2 0 -7\"></a-box>\n    </Scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox10.jsx",["362"],"import { Scene, Entity } from 'aframe-react';\n\nexport default function Sandbox() {\n  return (\n    <Scene>\n      <a-camera>\n        <a-entity\n          cursor\n          position=\"0 0 -1\"\n          geometry=\"primitive: sphere; radius: 0.005\"\n          material=\"color: #000000; shader: flat; opacity: 0.5\"\n        ></a-entity>\n      </a-camera>\n\n      <a-box\n        color=\"#AA0000\"\n        position=\"-2 0 -7\"\n        event-set__enter=\"_event: mouseenter; material.color: #FF0000\"\n        event-set__leave=\"_event: mouseleave; material.color: #AA0000\"\n        event-set__tarcol=\"_event: click; _target: #green; material.color: #00AAFF\"\n      ></a-box>\n      <a-box\n        id=\"green\"\n        color=\"#00AA00\"\n        position=\"-2 3 -7\"\n        event-set__rescol=\"_event: click; material.color: #00AA00\"\n      ></a-box>\n\n      <a-box\n        color=\"#AA0000\"\n        position=\"0 0 -7\"\n        event-set__enter=\"_event: mouseenter; material.color: #FF0000\"\n        event-set__leave=\"_event: mouseleave; material.color: #AA0000\"\n        event-set__tarvis=\"_event: click; _target: #blue; visible: true\"\n      ></a-box>\n      <a-box\n        id=\"blue\"\n        color=\"#0000AA\"\n        position=\"0 3 -7\"\n        visible=\"false\"\n        event-set__resvis=\"_event: click; visible: false\"\n      ></a-box>\n\n      <a-box\n        color=\"#AA0000\"\n        position=\"2 0 -7\"\n        event-set__enter=\"_event: mouseenter; material.color: #FF0000\"\n        event-set__leave=\"_event: mouseleave; material.color: #AA0000\"\n        event-set__tarpos=\"_event: click; _target: #yellow; position: 2 3 -5\"\n      ></a-box>\n      <a-box\n        id=\"yellow\"\n        color=\"#FFAA00\"\n        position=\"2 3 -7\"\n        event-set__respos=\"_event: click; position: 2 3 -7\"\n      ></a-box>\n    </Scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox11.jsx",["363","364"],"import { Scene, Entity } from 'aframe-react';\n\nexport default function Sandbox() {\n  return (\n    <a-scene>\n      <a-camera>\n        <a-entity\n          cursor=\"fuse: true; fuseTimeout: 1000\"\n          position=\"0 0 -1\"\n          geometry=\"primitive: sphere; radius: 0.005\"\n          material=\"color: #000000; shader: flat; opacity: 0.5\"\n          animation__enter=\"property: scale;\n                                        to: 3 3 3;\n                                        dur: 1000;\n                                        easing: linear;\n                                        startEvents: mouseenter\"\n          event-set__reset=\"_event: animationcomplete__enter; scale: 1 1 1\"\n          animation__leave=\"property: scale;\n                                        to: 1 1 1;\n                                        dur: 1000;\n                                        easing: linear;\n                                        startEvents: mouseleave\"\n        ></a-entity>\n      </a-camera>\n\n      <a-box\n        color=\"#AA0000\"\n        position=\"-2 0 -7\"\n        event-set__enter=\"_event: mouseenter; material.color: #FF0000\"\n        event-set__leave=\"_event: mouseleave; material.color: #AA0000\"\n        event-set__tarcol=\"_event: click; _target: #green; material.color: #00AAff\"\n      ></a-box>\n      <a-box\n        id=\"green\"\n        color=\"#00AA00\"\n        position=\"-2 3 -7\"\n        event-set__rescol=\"_event: click; material.color: #00AA00\"\n      ></a-box>\n\n      <a-box\n        color=\"#AA0000\"\n        position=\"0 0 -7\"\n        event-set__enter=\"_event: mouseenter; material.color: #FF0000\"\n        event-set__leave=\"_event: mouseleave; material.color: #AA0000\"\n        event-set__tarvis=\"_event: click; _target: #blue; visible: true\"\n      ></a-box>\n      <a-box\n        id=\"blue\"\n        color=\"#0000AA\"\n        position=\"0 3 -7\"\n        visible=\"false\"\n        event-set__resvis=\"_event: click; visible: false\"\n      ></a-box>\n\n      <a-box\n        color=\"#AA0000\"\n        position=\"2 0 -7\"\n        event-set__enter=\"_event: mouseenter; material.color: #FF0000\"\n        event-set__leave=\"_event: mouseleave; material.color: #AA0000\"\n        event-set__tarpos=\"_event: click; _target: #yellow; position: 2 3 -5\"\n      ></a-box>\n      <a-box\n        id=\"yellow\"\n        color=\"#FFAA00\"\n        position=\"2 3 -7\"\n        event-set__respos=\"_event: click; position: 2 3 -7\"\n      ></a-box>\n    </a-scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox12.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox13.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox14.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox15.jsx",["365"],"export default function Sandbox() {\n  return (\n    <a-scene physics=\"gravity: -9.8; restitution: 0.7\">\n      <a-assets>\n        <img id=\"ground\" src=\"/assets/img/floor.jpg\" />\n      </a-assets>\n      <a-entity progressive-controls position=\"0 0 5\"></a-entity>\n\n      <a-plane\n        src=\"#ground\"\n        scale=\"50 50 1\"\n        repeat=\"5 5 1\"\n        rotation=\"-90 0 0\"\n        static-body\n      ></a-plane>\n\n      <a-box color=\"#AA0000\" position=\"-3.5 0.5 -4\">\n        <a-box\n          color=\"#AA0000\"\n          visible=\"false\"\n          scale=\"2 3 1.5\"\n          position=\"0 1 0\"\n          static-body\n        ></a-box>\n      </a-box>\n\n      <a-sphere\n        color=\"#00AA00\"\n        radius=\"0.5\"\n        position=\"-1 4 -4\"\n        grabbable\n        dynamic-body=\"linearDamping: 0.05; mass: 1\"\n      ></a-sphere>\n\n      <a-sphere\n        color=\"#FFAA00\"\n        radius=\"0.5\"\n        position=\"1 4 -4\"\n        grabbable\n        dynamic-body=\"linearDamping: 0.5; angularDamping: 0.3; mass: 10\"\n      ></a-sphere>\n\n      <a-box\n        color=\"#00AAFF\"\n        position=\"3.5 2 -4\"\n        static-body=\"shape: sphere; sphereRadius: 1\"\n        event-set__color=\"_event: collide; material.color: #0055AA\"\n        animation=\"property: rotation; to: 0 360 0; loop: true; dur: 3000\"\n      ></a-box>\n    </a-scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox16.jsx",["366","367"],"import useScript from '../../hooks/useScript';\n\nexport default function Sandbox() {\n  useScript(\n    null,\n    `\n  AFRAME.registerComponent('play', {\n    init() {\n      const myEl = document.querySelector('#yellow')\n      this.el.addEventListener('click', function () {\n        myEl.components.sound.playSound()\n      })\n    },\n  })\n  AFRAME.registerComponent('stop', {\n    init() {\n      const myEl = document.querySelector('#yellow')\n      this.el.addEventListener('click', function () {\n        myEl.components.sound.stopSound()\n      })\n    },\n  })\n  `\n  );\n\n  return (\n    <a-scene>\n      <a-assets>\n        <img id=\"ground\" src=\"/assets/img/floor.jpg\" />\n        <audio id=\"sound_mozart1\" src=\"/assets/music/mozart1.mp3\"></audio>\n        <audio id=\"sound_verdi\" src=\"/assets/music/verdi.mp3\"></audio>\n        <img id=\"panorama\" src=\"/assets/img/360-panorama.jpg\" />\n        <audio\n          id=\"ambience_sound\"\n          src=\"/assets/music/japanese_nightingale_1.mp3\"\n        ></audio>\n      </a-assets>\n\n      <a-entity position=\"0 0 7\">\n        <a-camera>\n          <a-cursor></a-cursor>\n        </a-camera>\n      </a-entity>\n\n      <a-plane\n        src=\"#ground\"\n        scale=\"40 40 1\"\n        repeat=\"2 2\"\n        rotation=\"-90 0 0\"\n      ></a-plane>\n\n      <a-cylinder\n        color=\"#0088FF\"\n        height=\"5\"\n        position=\"-2 2.5 0\"\n        sound=\"src: #sound_mozart1;\n        \t\t\t\t   on: click;\n        \t\t\t\t   volume: 1;\n        \t\t\t\t   refDistance: 4;\n        \t\t\t\t   rolloffFactor: 4\"\n      >\n        <a-entity\n          sound=\"src: #sound_mozart1; autoplay: false\"\n          position=\"1.396 1.525 0\"\n        ></a-entity>\n      </a-cylinder>\n\n      <a-box\n        id=\"yellow\"\n        color=\"#FFAA00\"\n        position=\"1.5 0.5 0.5\"\n        sound=\"src: #sound_verdi\"\n      >\n        <a-sphere\n          color=\"#00AA00\"\n          radius=\"0.25\"\n          position=\"-0.5 1 0\"\n          play\n        ></a-sphere>\n        <a-sphere\n          color=\"#AA0000\"\n          radius=\"0.25\"\n          position=\"0.5 1 0\"\n          stop\n        ></a-sphere>\n      </a-box>\n\n      <a-sky\n        src=\"#panorama\"\n        sound=\"src: #ambience_sound; autoplay: true; loop: true; positional: false\"\n      ></a-sky>\n    </a-scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox17.jsx",["368","369"],"import useScript from '../../hooks/useScript';\n\nexport default function Sandbox() {\n  useScript(\n    null,\n    `\n    AFRAME.registerComponent('play-pause', {\n      init() {\n        const myVideo = document.querySelector('#sample_movie')\n        const videoControls = document.querySelector('#videoControls')\n        this.el.addEventListener('click', function () {\n          if (myVideo.paused) {\n            myVideo.play()\n            videoControls.setAttribute('src', '#pause')\n          } else {\n            myVideo.pause()\n            videoControls.setAttribute('src', '#play')\n          }\n        })\n      },\n    })\n  `\n  );\n\n  return (\n    <a-scene>\n      <a-assets>\n        <img id=\"play\" src=\"/assets/img/play.png\" />\n        <img id=\"pause\" src=\"/assets/img/pause.png\" />\n        <video\n          id=\"sample_movie\"\n          src=\"/assets/movie/sample1.mp4\"\n          loop=\"true\"\n        ></video>\n      </a-assets>\n\n      <a-camera>\n        <a-cursor></a-cursor>\n      </a-camera>\n\n      <a-video src=\"#sample_movie\" width=\"8\" height=\"4.5\" position=\"0 3 -9\">\n        <a-image\n          id=\"videoControls\"\n          src=\"#play\"\n          position=\"0 -3 0\"\n          scale=\"0.5 0.5 1\"\n          play-pause\n        ></a-image>\n      </a-video>\n    </a-scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox18.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox19.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox20.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox21.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox22.jsx",["370"],"export default function Sandbox() {\n  return (\n    <a-scene>\n      <a-assets>\n        <img id=\"look-at-img\" src=\"/assets/img/look_at.jpg\" />\n      </a-assets>\n\n      <a-plane\n        color=\"#E7E7E7\"\n        shader=\"flat\"\n        rotation=\"-90 0 0\"\n        scale=\"6 18 1\"\n      ></a-plane>\n\n      <a-entity position=\"-4.5 0 0\" rotation=\"0 -36 0\">\n        <a-camera id=\"cam\">\n          <a-cursor></a-cursor>\n        </a-camera>\n      </a-entity>\n\n      <a-box\n        id=\"blue\"\n        color=\"#00AAFF\"\n        position=\"-1.5 0.5 -6\"\n        animation=\"property: position;\n\t\t\t\t\t\t  to: -1.5 0.5 6;\n\t\t\t\t\t\t  dir: alternate;\n\t\t\t\t\t\t  easing: linear;\n\t\t\t\t\t\t  loop: true;\n\t\t\t\t\t\t  dur: 6000\"\n      >\n        <a-image\n          src=\"#look-at-img\"\n          position=\"0 1.5 0\"\n          height=\"0.75\"\n          look-at=\"#cam\"\n        ></a-image>\n      </a-box>\n\n      <a-box color=\"#FFAA00\" position=\"1.5 0.5 -6\" look-at=\"#blue\">\n        <a-entity\n          position=\"0 1.5 0\"\n          look-at=\"#cam\"\n          text=\"value: LOOK-AT; color: #212121; align: center; wrapCount: 9\"\n          geometry=\"primitive: plane; width: auto; height: 0.5\"\n          material=\"color: #FFAA00; shader: flat; visible: true\"\n        ></a-entity>\n      </a-box>\n    </a-scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox23.jsx",["371"],"export default function Sandbox() {\n  return (\n    <a-scene>\n      <a-assets>\n        <img id=\"int-ear\" src=\"/assets/img/InternalEar.jpg\" />\n      </a-assets>\n\n      <a-entity position=\"0 0 4\">\n        <a-camera></a-camera>\n      </a-entity>\n\n      <a-circle color=\"#DDDDDD\" shader=\"flat\" rotation=\"-90 0 0\"></a-circle>\n\n      <a-cylinder\n        color=\"#AA0000\"\n        radius=\"0.5\"\n        height=\"0.5\"\n        position=\"0 0.25 0\"\n      ></a-cylinder>\n\n      <a-image src=\"#int-ear\" scale=\"3 3 1\" position=\"0 2 0\"></a-image>\n    </a-scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox24.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox25.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox26.jsx",["372"],"export default function Sandbox() {\n  return (\n    <a-scene background=\"color: #FFFFFF\">\n      <a-assets>\n        <img id=\"vignette\" src=\"/assets/img/vignette.png\" />\n      </a-assets>\n\n      <a-entity\n        movement-controls=\"speed: 0.15\"\n        event-set__start=\"_target: #dyn-fov-red; _event: trackpadtouchstart;\n\t\t \t\t\t\t\t\t\tanimation.property: opacity;\n\t\t \t\t\t\t\t\t\tanimation.to: 1;\n\t\t\t \t\t\t\t\t\tanimation.dur: 300;\n\t\t\t \t\t\t\t\t\tanimation.easing: easeOutQuad\"\n        event-set__end=\"_target: #dyn-fov-red; _event: trackpadtouchend;\n\t\t \t\t  \t\t\t\t  animation.to: 0\"\n      >\n        <a-entity progressive-controls>\n          <a-camera>\n            <a-image\n              id=\"dyn-fov-red\"\n              src=\"#vignette\"\n              position=\"0 0 -0.3\"\n              opacity=\"0\"\n            ></a-image>\n          </a-camera>\n        </a-entity>\n      </a-entity>\n\n      <a-plane\n        color=\"#DDDDDD\"\n        shader=\"flat\"\n        rotation=\"-90 0 0\"\n        scale=\"10 40 1\"\n      ></a-plane>\n\n      <a-cylinder color=\"#FF7700\" radius=\"0.1\" position=\"1 0.5 -3\"></a-cylinder>\n      <a-cylinder color=\"#FF7700\" radius=\"0.1\" position=\"1 0.5 -6\"></a-cylinder>\n      <a-cylinder color=\"#FF7700\" radius=\"0.1\" position=\"1 0.5 -9\"></a-cylinder>\n      <a-cylinder\n        color=\"#FF7700\"\n        radius=\"0.1\"\n        position=\"-1 0.5 -3\"\n      ></a-cylinder>\n      <a-cylinder\n        color=\"#FF7700\"\n        radius=\"0.1\"\n        position=\"-1 0.5 -6\"\n      ></a-cylinder>\n      <a-cylinder\n        color=\"#FF7700\"\n        radius=\"0.1\"\n        position=\"-1 0.5 -9\"\n      ></a-cylinder>\n    </a-scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox27.jsx",["373"],"export default function Sandbox() {\n  return (\n    <a-scene background=\"color: #FFFFFF\">\n      <a-assets>\n        <img id=\"footsteps\" src=\"/assets/img/footsteps.png\" />\n      </a-assets>\n\n      <a-entity\n        id=\"cam-rig\"\n        movement-controls=\"controls: checkpoint\"\n        checkpoint-controls=\"mode: animate\"\n      >\n        <a-entity progressive-controls></a-entity>\n      </a-entity>\n\n      <a-plane\n        color=\"#DDDDDD\"\n        shader=\"flat\"\n        rotation=\"-90 0 0\"\n        scale=\"10 40 1\"\n      ></a-plane>\n\n      <a-curvedimage\n        src=\"/assets/img/curved-image.jpg\"\n        position=\"-3 1.5 -16\"\n        scale=\"3 3 3\"\n        theta-length=\"90\"\n        theta-start=\"135\"\n        radius=\"0.707\"\n        height=\"0.833\"\n      ></a-curvedimage>\n      <a-image\n        src=\"#footsteps\"\n        position=\"-3 3.5 -16\"\n        checkpoint=\"offset: 0 -3.5 0\"\n        look-at=\"#cam-rig\"\n      ></a-image>\n\n      <a-box color=\"#00AA00\" position=\"3 0.5 -16\"></a-box>\n      <a-image\n        src=\"#footsteps\"\n        position=\"3 2.5 -16\"\n        checkpoint=\"offset: -1 -2.5 0\"\n        look-at=\"#cam-rig\"\n      ></a-image>\n\n      <a-box color=\"#FFAA00\" position=\"-3 0.5 -8\"></a-box>\n      <a-image\n        src=\"#footsteps\"\n        position=\"-3 2.5 -8\"\n        checkpoint=\"offset: 1 -2.5 0\"\n        look-at=\"#cam-rig\"\n      ></a-image>\n\n      <a-box color=\"#AA0000\" position=\"3 0.5 -8\"></a-box>\n      <a-image\n        src=\"#footsteps\"\n        position=\"3 2.5 -8\"\n        checkpoint=\"offset: -1 -2.5 0\"\n        look-at=\"#cam-rig\"\n      ></a-image>\n    </a-scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox28.jsx",["374","375"],"export default function Sandbox() {\n  return (\n    <a-scene background=\"color: #FFFFFF\">\n      <a-assets>\n        <img id=\"footsteps\" src=\"/assets/img/footsteps.png\" />\n        <img id=\"vignette\" src=\"/assets/img/vignette.png\" />\n      </a-assets>\n\n      <a-plane\n        color=\"#DDDDDD\"\n        shader=\"flat\"\n        rotation=\"-90 0 0\"\n        scale=\"10 40 1\"\n      ></a-plane>\n\n      <a-curvedimage\n        src=\"/assets/img/curved-image.jpg\"\n        position=\"-3 1.5 -16\"\n        scale=\"3 3 3\"\n        theta-length=\"90\"\n        theta-start=\"135\"\n        radius=\"0.707\"\n        height=\"0.833\"\n      ></a-curvedimage>\n      <a-image\n        src=\"#footsteps\"\n        position=\"-3 3.5 -16\"\n        checkpoint=\"offset: 0 -3.5 0\"\n        look-at=\"#cam-rig\"\n      ></a-image>\n\n      <a-box color=\"#00AA00\" position=\"3 0.5 -16\"></a-box>\n      <a-image\n        src=\"#footsteps\"\n        position=\"3 2.5 -16\"\n        checkpoint=\"offset: -1 -2.5 0\"\n        look-at=\"#cam-rig\"\n      ></a-image>\n\n      <a-box color=\"#FFAA00\" position=\"-3 0.5 -8\"></a-box>\n      <a-image\n        src=\"#footsteps\"\n        position=\"-3 2.5 -8\"\n        checkpoint=\"offset: 1 -2.5 0\"\n        look-at=\"#cam-rig\"\n      ></a-image>\n\n      <a-box color=\"#AA0000\" position=\"3 0.5 -8\"></a-box>\n      <a-image\n        src=\"#footsteps\"\n        position=\"3 2.5 -8\"\n        checkpoint=\"offset: -1 -2.5 0\"\n        look-at=\"#cam-rig\"\n      ></a-image>\n\n      <a-entity\n        id=\"cam-rig\"\n        movement-controls=\"controls: checkpoint\"\n        checkpoint-controls=\"mode: animate\"\n        event-set__start=\"_target: #dyn-fov-red; _event: navigation-start;\n\t\t\t\t \t\t\t\t\tanimation.property: opacity;\n\t\t\t\t \t\t\t\t\tanimation.to: 1;\n\t\t\t\t \t\t\t\t\tanimation.dur: 300;\n\t\t\t\t \t\t\t\t\tanimation.easing: easeOutQuad\"\n        event-set__end=\"_target: #dyn-fov-red; _event: navigation-end;\n\t\t\t\t \t\t\t\t\tanimation.to: 0\"\n      >\n        <a-entity progressive-controls>\n          <a-camera>\n            <a-image\n              id=\"dyn-fov-red\"\n              src=\"#vignette\"\n              position=\"0 0 -0.3\"\n              opacity=\"0\"\n            ></a-image>\n          </a-camera>\n        </a-entity>\n      </a-entity>\n    </a-scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox29.jsx",["376","377"],"export default function Sandbox() {\n  return (\n    <a-scene background=\"color: #FFFFFF\">\n      <a-assets>\n        <img id=\"footsteps\" src=\"/assets/img/footsteps.png\" />\n        <img id=\"black\" src=\"/assets/img/black.png\" />\n      </a-assets>\n\n      <a-plane\n        color=\"#DDDDDD\"\n        shader=\"flat\"\n        rotation=\"-90 0 0\"\n        scale=\"10 40 1\"\n        position=\"0 0 -12\"\n      ></a-plane>\n\n      <a-curvedimage\n        src=\"/assets/img/curved-image.jpg\"\n        position=\"-2 1.5 -24\"\n        scale=\"3 3 3\"\n        theta-length=\"90\"\n        theta-start=\"135\"\n        radius=\"0.707\"\n        height=\"0.833\"\n      ></a-curvedimage>\n      <a-image\n        src=\"#footsteps\"\n        position=\"-2 3.5 -24\"\n        checkpoint=\"offset: 0 -3.5 0\"\n        look-at=\"#cam-rig\"\n      ></a-image>\n\n      <a-box color=\"#AA00AA\" position=\"2 0.5 -24\"></a-box>\n      <a-image\n        src=\"#footsteps\"\n        position=\"2 2.5 -24\"\n        checkpoint=\"offset: -1 -2.5 0\"\n        look-at=\"#cam-rig\"\n      ></a-image>\n\n      <a-box color=\"#FF7700\" position=\"-2 0.5 -8\"></a-box>\n      <a-image\n        src=\"#footsteps\"\n        position=\"-2 2.5 -8\"\n        checkpoint=\"offset: 1 -2.5 0\"\n        look-at=\"#cam-rig\"\n      ></a-image>\n\n      <a-box color=\"#00AA00\" position=\"2 0.5 -16\"></a-box>\n      <a-image\n        src=\"#footsteps\"\n        position=\"2 2.5 -16\"\n        checkpoint=\"offset: -1 -2.5 0\"\n        look-at=\"#cam-rig\"\n      ></a-image>\n\n      <a-entity\n        id=\"cam-rig\"\n        movement-controls=\"controls: checkpoint\"\n        checkpoint-controls=\"mode: animate; animateSpeed: 13.0\"\n        event-set__start=\"_target: #blink; _event: navigation-start;\n\t\t\t\t  \t\t\t\t\tanimation.property: opacity;\n\t\t\t\t  \t\t\t\t\tanimation.to: 1;\n\t\t\t\t  \t\t\t\t\tanimation.dur: 250;\n\t\t\t\t  \t\t\t\t\tanimation.easing: easeOutQuart\"\n        event-set__end=\"_target: #blink; _event: navigation-end;\n\t\t\t\t  \t\t\t\t  animation.to: 0\"\n      >\n        <a-entity progressive-controls>\n          <a-camera>\n            <a-image\n              id=\"blink\"\n              src=\"#black\"\n              position=\"0 0 -0.3\"\n              opacity=\"0\"\n            ></a-image>\n          </a-camera>\n        </a-entity>\n      </a-entity>\n    </a-scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox30.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox31.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox32.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox33.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox34.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/colorize.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/change-colorize-property.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/random-color.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/refresh-obj.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/play-and-stop.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/progressive-controls.js",["378"],"/* eslint-disable no-case-declarations */\nconst gazeDefaultId = 'progressivecontrolsgazedefault';\nconst pointDefaultId = 'progressivecontrolspointdefault';\nconst touchDefaultId = 'progressivecontrolstouchdefault';\n\nwindow.AFRAME.registerComponent('progressive-controls', {\n  schema: {\n    maxLevel: { default: 'touch', oneOf: ['gaze', 'point', 'touch'] },\n    gazeMixin: { default: '' },\n    pointMixin: { default: '' },\n    touchMixin: { default: '' },\n    override: { default: false },\n    objects: { default: '' },\n    controllerModel: { default: true },\n  },\n  init() {\n    const rayEndProp = 'clearedEls';\n    this.levels = ['gaze', 'point', 'touch'];\n    this.currentLevel = new Map();\n    this.controllerName = new Map();\n\n    // setup mixins for defaults\n    const assets =\n      this.el.sceneEl.querySelector('a-assets') ||\n      this.el.sceneEl.appendChild(document.createElement('a-assets'));\n    const gazeDefault = (this.gazeDefault = document.createElement('a-mixin'));\n    const shRayConfig = window.AFRAME.utils.styleParser.stringify({\n      colliderEvent: 'raycaster-intersection',\n      colliderEventProperty: 'els',\n      colliderEndEvent: 'raycaster-intersection-cleared',\n      colliderEndEventProperty: rayEndProp,\n      colliderState: '',\n    });\n    gazeDefault.setAttribute('id', gazeDefaultId);\n    gazeDefault.setAttribute(\n      'geometry',\n      'primitive: ring;' +\n        'radiusOuter: 0.008; radiusInner: 0.005; segmentsTheta: 32'\n    );\n    gazeDefault.setAttribute('material', 'color: #000; shader: flat');\n    gazeDefault.setAttribute('position', '0 0 -0.5');\n    gazeDefault.setAttribute('raycaster', '');\n    gazeDefault.setAttribute('super-hands', shRayConfig);\n    const pointDefault = (this.pointDefault = document.createElement(\n      'a-mixin'\n    ));\n    pointDefault.setAttribute('id', pointDefaultId);\n    pointDefault.setAttribute('raycaster', 'showLine: true');\n    pointDefault.setAttribute('super-hands', shRayConfig);\n    const touchDefault = (this.touchDefault = document.createElement(\n      'a-mixin'\n    ));\n    touchDefault.setAttribute('id', touchDefaultId);\n    touchDefault.setAttribute('super-hands', '');\n    touchDefault.setAttribute('sphere-collider', '');\n    if (this.el.sceneEl.getAttribute('physics')) {\n      const physicsBodyDefault = 'shape: sphere; sphereRadius: 0.02';\n      pointDefault.setAttribute('static-body', physicsBodyDefault);\n      gazeDefault.setAttribute('static-body', physicsBodyDefault);\n      touchDefault.setAttribute('static-body', physicsBodyDefault);\n    }\n    assets.appendChild(gazeDefault);\n    assets.appendChild(pointDefault);\n    assets.appendChild(touchDefault);\n\n    this.camera = this.el.querySelector('a-camera,[camera]');\n    if (!this.camera) {\n      this.camera = this.el.appendChild(document.createElement('a-camera'));\n      // DEPRECATION path: camera y instead of userHeight in verions >= 0.8\n      if (parseFloat(window.AFRAME.version) > 0.7) {\n        this.camera.setAttribute('position', '0 1.6 0');\n      }\n    }\n    this.caster =\n      this.camera.querySelector('.gazecaster') ||\n      this.camera.appendChild(document.createElement('a-entity'));\n    ['left', 'right'].forEach((hand) => {\n      // find controller by left-controller/right-controller class or create one\n      this[hand] =\n        this.el.querySelector('.' + hand + '-controller') ||\n        this.el.appendChild(document.createElement('a-entity'));\n      const ctrlrCompConfig = {\n        hand,\n        model: this.data.controllerModel,\n      };\n      [\n        'daydream-controls',\n        'gearvr-controls',\n        'oculus-touch-controls',\n        'vive-controls',\n        'windows-motion-controls',\n        'oculus-go-controls',\n      ].forEach((ctrlr) => this[hand].setAttribute(ctrlr, ctrlrCompConfig));\n    });\n    this.el.addEventListener('controllerconnected', (e) => this.detectLevel(e));\n    this.eventRepeaterB = this.eventRepeater.bind(this);\n    // pass mouse and touch events into the scene\n    this.addEventListeners();\n    // default level\n    this.currentLevel.set('right', 0);\n  },\n  update() {\n    const objs = { objects: this.data.objects };\n    updateMixin(this.gazeDefault, 'raycaster', objs);\n    updateMixin(this.pointDefault, 'raycaster', objs);\n    updateMixin(this.touchDefault, 'sphere-collider', objs);\n    for (const [hand, level] of this.currentLevel) {\n      this.setLevel(level, hand, true);\n    }\n  },\n  remove() {\n    if (!this.eventsRegistered) {\n      return;\n    }\n    const canv = this.el.sceneEl.canvas;\n    canv.removeEventListener('mousedown', this.eventRepeaterB);\n    canv.removeEventListener('mouseup', this.eventRepeaterB);\n    canv.removeEventListener('touchstart', this.eventRepeaterB);\n    canv.removeEventListener('touchend', this.eventRepeaterB);\n  },\n  setLevel(newLevel, hand, force) {\n    hand = hand || 'right';\n    const maxLevel = this.levels.indexOf(this.data.maxLevel);\n    const currentHand = this[hand];\n    const override = this.data.override;\n    newLevel = newLevel > maxLevel ? maxLevel : newLevel;\n    if (newLevel === this.currentLevel.get(hand) && !force) {\n      return;\n    }\n    if (newLevel !== 0 && this.caster) {\n      // avoids error where physics system tries to tick on removed entity\n      this.caster.setAttribute('mixin', '');\n      this.camera.removeChild(this.caster);\n      this.caster = null;\n    }\n    switch (newLevel) {\n      case this.levels.indexOf('gaze'):\n        // eslint-disable-next-line no-case-declarations\n        const gazeMixin = this.data.gazeMixin;\n        this.caster.setAttribute(\n          'mixin',\n          (override && gazeMixin.length ? '' : gazeDefaultId + ' ') + gazeMixin\n        );\n        break;\n      case this.levels.indexOf('point'):\n        const ctrlrName = this.controllerName.get(hand);\n        const ctrlrCfg = this.controllerConfig[ctrlrName];\n        const pntMixin = this.data.pointMixin;\n        if (ctrlrCfg && ctrlrCfg.raycaster) {\n          currentHand.setAttribute('raycaster', ctrlrCfg.raycaster);\n        }\n        currentHand.setAttribute(\n          'mixin',\n          (override && pntMixin.length ? '' : pointDefaultId + ' ') + pntMixin\n        );\n        break;\n      case this.levels.indexOf('touch'):\n        const tchMixin = this.data.touchMixin;\n        currentHand.setAttribute(\n          'mixin',\n          (override && tchMixin.length ? '' : touchDefaultId + ' ') + tchMixin\n        );\n        break;\n    }\n    this.currentLevel.set(hand, newLevel);\n    this.el.emit('controller-progressed', {\n      level: this.levels[newLevel],\n      hand,\n    });\n  },\n  detectLevel(evt) {\n    const DOF6 = [\n      'vive-controls',\n      'oculus-touch-controls',\n      'windows-motion-controls',\n    ];\n    const DOF3 = ['gearvr-controls', 'daydream-controls', 'oculus-go-controls'];\n    const hand = evt.detail.component.data.hand || 'right';\n    this.controllerName.set(hand, evt.detail.name);\n    if (DOF6.includes(evt.detail.name)) {\n      this.setLevel(this.levels.indexOf('touch'), hand);\n    } else if (DOF3.includes(evt.detail.name)) {\n      this.setLevel(this.levels.indexOf('point'), hand);\n    }\n  },\n  eventRepeater(evt) {\n    if (!this.caster) {\n      return;\n    } // only for gaze mode\n    if (evt.type.startsWith('touch')) {\n      evt.preventDefault();\n      // avoid repeating touchmove because it interferes with look-controls\n      if (evt.type === 'touchmove') {\n        return;\n      }\n    }\n    this.caster.emit(evt.type, evt.detail);\n  },\n  addEventListeners() {\n    if (!this.el.sceneEl.canvas) {\n      this.el.sceneEl.addEventListener(\n        'loaded',\n        this.addEventListeners.bind(this)\n      );\n      return;\n    }\n    this.el.sceneEl.canvas.addEventListener('mousedown', this.eventRepeaterB);\n    this.el.sceneEl.canvas.addEventListener('mouseup', this.eventRepeaterB);\n    this.el.sceneEl.canvas.addEventListener('touchstart', this.eventRepeaterB);\n    this.el.sceneEl.canvas.addEventListener('touchmove', this.eventRepeaterB);\n    this.el.sceneEl.canvas.addEventListener('touchend', this.eventRepeaterB);\n    this.eventsRegistered = true;\n  },\n  controllerConfig: {\n    'gearvr-controls': {\n      raycaster: { origin: { x: 0, y: 0.0005, z: 0 } },\n    },\n    'oculus-touch-controls': {\n      raycaster: {\n        origin: { x: 0.001, y: 0, z: 0.065 },\n        direction: { x: 0, y: -0.8, z: -1 },\n      },\n    },\n    'oculus-go-controls': {\n      raycaster: { origin: { x: 0, y: 0.0005, z: 0 } },\n    },\n    'windows-motion-controls': {\n      raycaster: { direction: { x: 0, y: -0.4472, z: -0.8944 } },\n    },\n  },\n});\n\nfunction updateMixin(mixin, attr, additions) {\n  const stringify = window.AFRAME.utils.styleParser.stringify;\n  const extend = window.AFRAME.utils.extend;\n  const old = mixin.getAttribute(attr);\n  if (old) {\n    mixin.setAttribute(attr, stringify(extend(old, additions)));\n  }\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/animated-colorize.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox35.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/blink-teleportation.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox36.jsx",["379"],"export default function Sandbox() {\n  return (\n    <a-scene background=\"color: #FFFFFF\">\n      <a-assets>\n        <img id=\"footsteps\" src=\"/assets/img/footsteps.png\" />\n      </a-assets>\n\n      <a-box\n        color=\"#AA0000\"\n        position=\"-3 0.5 4\"\n        class=\"clickable\"\n        blink-teleportation=\"pos: -2 0 4\"\n      ></a-box>\n\n      <a-box\n        color=\"#00AA00\"\n        position=\"3 0.5 4\"\n        class=\"clickable\"\n        blink-teleportation=\"pos: 2 0 4; hide: true\"\n      ></a-box>\n\n      <a-box color=\"#FFAA00\" position=\"-3 0.5 -4\"></a-box>\n      <a-image\n        src=\"#footsteps\"\n        position=\"-3 2.5 -4\"\n        look-at=\"#camera\"\n        class=\"clickable\"\n        blink-teleportation=\"pos: -2 0 -4; hide: true\"\n      ></a-image>\n\n      <a-box color=\"#0077FF\" position=\"3 0.5 -4\"></a-box>\n      <a-image\n        src=\"#footsteps\"\n        position=\"3 2.5 -4\"\n        look-at=\"#camera\"\n        class=\"clickable\"\n        blink-teleportation=\"pos: 2 0 -4\"\n      ></a-image>\n\n      <a-plane\n        color=\"#DDDDDD\"\n        shader=\"flat\"\n        rotation=\"-90 0 0\"\n        scale=\"16 16 1\"\n      ></a-plane>\n\n      <a-entity id=\"cameraRig\" position=\"0 0 12\">\n        <a-camera id=\"camera\" wasd-controls-enabled=\"false\">\n          <a-cursor raycaster=\"objects: .clickable\"></a-cursor>\n        </a-camera>\n      </a-entity>\n    </a-scene>\n  );\n}\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/entity-spawner.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox37.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/components/sandbox/Sandbox38.jsx",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/multiple-entities.js",[],"/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/aframe-helper/spawn-in-circle.js",["380"],"window.AFRAME.registerComponent('spawn-in-circle', {\n  schema: {\n    radius: { type: 'number', default: 1 },\n  },\n\n  init: function () {\n    var el = this.el;\n    var center = el.getAttribute('position');\n\n    var angleRad = this.getRandomAngleInRadians();\n    var circlePoint = this.randomPointOnCircle(this.data.radius, angleRad);\n    var worldPoint = {\n      x: circlePoint.x + center.x,\n      y: center.y,\n      z: circlePoint.y + center.z,\n    };\n    el.setAttribute('position', worldPoint);\n    // console.log('world point', worldPoint);\n\n    var angleDeg = (angleRad * 180) / Math.PI;\n    var angleToCenter = -1 * angleDeg + 90;\n    var angleRad = window.THREE.Math.degToRad(angleToCenter);\n    el.object3D.rotation.set(0, angleRad, 0);\n    // console.log('angle deg', angleDeg);\n  },\n\n  getRandomAngleInRadians: function () {\n    return Math.random() * Math.PI * 2;\n  },\n\n  randomPointOnCircle: function (radius, angleRad) {\n    var x = Math.cos(angleRad) * radius;\n    var y = Math.sin(angleRad) * radius;\n    return { x: x, y: y };\n  },\n});\n","/Users/yoshiji/webdev/tulip/tulip-project/react-vr/src/NAF/build.js",["381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413"],{"ruleId":"414","severity":1,"message":"415","line":7,"column":9,"nodeType":"416","endLine":7,"endColumn":55},{"ruleId":"414","severity":1,"message":"415","line":8,"column":9,"nodeType":"416","endLine":8,"endColumn":65},{"ruleId":"417","replacedBy":"418"},{"ruleId":"419","replacedBy":"420"},{"ruleId":"414","severity":1,"message":"415","line":7,"column":9,"nodeType":"416","endLine":7,"endColumn":63},{"ruleId":"414","severity":1,"message":"415","line":7,"column":9,"nodeType":"416","endLine":7,"endColumn":59},{"ruleId":"414","severity":1,"message":"415","line":8,"column":9,"nodeType":"416","endLine":8,"endColumn":55},{"ruleId":"414","severity":1,"message":"415","line":9,"column":9,"nodeType":"416","endLine":9,"endColumn":59},{"ruleId":"414","severity":1,"message":"415","line":7,"column":9,"nodeType":"416","endLine":7,"endColumn":55},{"ruleId":"414","severity":1,"message":"415","line":7,"column":9,"nodeType":"416","endLine":7,"endColumn":63},{"ruleId":"414","severity":1,"message":"415","line":7,"column":9,"nodeType":"416","endLine":7,"endColumn":69},{"ruleId":"414","severity":1,"message":"415","line":7,"column":9,"nodeType":"416","endLine":7,"endColumn":55},{"ruleId":"414","severity":1,"message":"415","line":8,"column":9,"nodeType":"416","endLine":8,"endColumn":59},{"ruleId":"421","severity":1,"message":"422","line":3,"column":17,"nodeType":"423","messageId":"424","endLine":3,"endColumn":23},{"ruleId":"425","severity":1,"message":"426","line":57,"column":32,"nodeType":"427","messageId":"428","endLine":57,"endColumn":34},{"ruleId":"425","severity":1,"message":"426","line":47,"column":19,"nodeType":"427","messageId":"428","endLine":47,"endColumn":21},{"ruleId":"429","severity":1,"message":"430","line":536,"column":5,"nodeType":"431","messageId":"432","endLine":553,"endColumn":6},{"ruleId":"425","severity":1,"message":"426","line":225,"column":17,"nodeType":"427","messageId":"428","endLine":225,"endColumn":19},{"ruleId":"425","severity":1,"message":"433","line":214,"column":16,"nodeType":"427","messageId":"428","endLine":214,"endColumn":18},{"ruleId":"425","severity":1,"message":"433","line":214,"column":55,"nodeType":"427","messageId":"428","endLine":214,"endColumn":57},{"ruleId":"425","severity":1,"message":"426","line":22,"column":18,"nodeType":"427","messageId":"428","endLine":22,"endColumn":20},{"ruleId":"425","severity":1,"message":"426","line":27,"column":14,"nodeType":"427","messageId":"428","endLine":27,"endColumn":16},{"ruleId":"425","severity":1,"message":"426","line":31,"column":15,"nodeType":"427","messageId":"428","endLine":31,"endColumn":17},{"ruleId":"425","severity":1,"message":"433","line":32,"column":44,"nodeType":"427","messageId":"428","endLine":32,"endColumn":46},{"ruleId":"425","severity":1,"message":"426","line":36,"column":17,"nodeType":"427","messageId":"428","endLine":36,"endColumn":19},{"ruleId":"425","severity":1,"message":"433","line":37,"column":49,"nodeType":"427","messageId":"428","endLine":37,"endColumn":51},{"ruleId":"434","severity":1,"message":"435","line":54,"column":10,"nodeType":"427","messageId":"436","endLine":54,"endColumn":17},{"ruleId":"434","severity":1,"message":"435","line":54,"column":21,"nodeType":"427","messageId":"436","endLine":54,"endColumn":28},{"ruleId":"425","severity":1,"message":"433","line":25,"column":43,"nodeType":"427","messageId":"428","endLine":25,"endColumn":45},{"ruleId":"425","severity":1,"message":"426","line":141,"column":67,"nodeType":"427","messageId":"428","endLine":141,"endColumn":69},{"ruleId":"425","severity":1,"message":"426","line":146,"column":61,"nodeType":"427","messageId":"428","endLine":146,"endColumn":63},{"ruleId":"421","severity":1,"message":"422","line":1,"column":17,"nodeType":"423","messageId":"424","endLine":1,"endColumn":23},{"ruleId":"414","severity":1,"message":"415","line":7,"column":9,"nodeType":"416","endLine":7,"endColumn":55},{"ruleId":"414","severity":1,"message":"415","line":8,"column":9,"nodeType":"416","endLine":8,"endColumn":72},{"ruleId":"421","severity":1,"message":"422","line":1,"column":17,"nodeType":"423","messageId":"424","endLine":1,"endColumn":23},{"ruleId":"421","severity":1,"message":"422","line":1,"column":17,"nodeType":"423","messageId":"424","endLine":1,"endColumn":23},{"ruleId":"421","severity":1,"message":"437","line":1,"column":10,"nodeType":"423","messageId":"424","endLine":1,"endColumn":15},{"ruleId":"421","severity":1,"message":"422","line":1,"column":17,"nodeType":"423","messageId":"424","endLine":1,"endColumn":23},{"ruleId":"414","severity":1,"message":"415","line":5,"column":9,"nodeType":"416","endLine":5,"endColumn":56},{"ruleId":"414","severity":1,"message":"415","line":29,"column":9,"nodeType":"416","endLine":29,"endColumn":56},{"ruleId":"414","severity":1,"message":"415","line":32,"column":9,"nodeType":"416","endLine":32,"endColumn":65},{"ruleId":"414","severity":1,"message":"415","line":28,"column":9,"nodeType":"416","endLine":28,"endColumn":53},{"ruleId":"414","severity":1,"message":"415","line":29,"column":9,"nodeType":"416","endLine":29,"endColumn":55},{"ruleId":"414","severity":1,"message":"415","line":5,"column":9,"nodeType":"416","endLine":5,"endColumn":63},{"ruleId":"414","severity":1,"message":"415","line":5,"column":9,"nodeType":"416","endLine":5,"endColumn":63},{"ruleId":"414","severity":1,"message":"415","line":5,"column":9,"nodeType":"416","endLine":5,"endColumn":61},{"ruleId":"414","severity":1,"message":"415","line":5,"column":9,"nodeType":"416","endLine":5,"endColumn":63},{"ruleId":"414","severity":1,"message":"415","line":5,"column":9,"nodeType":"416","endLine":5,"endColumn":63},{"ruleId":"414","severity":1,"message":"415","line":6,"column":9,"nodeType":"416","endLine":6,"endColumn":61},{"ruleId":"414","severity":1,"message":"415","line":5,"column":9,"nodeType":"416","endLine":5,"endColumn":63},{"ruleId":"414","severity":1,"message":"415","line":6,"column":9,"nodeType":"416","endLine":6,"endColumn":55},{"ruleId":"429","severity":1,"message":"430","line":136,"column":5,"nodeType":"431","messageId":"432","endLine":164,"endColumn":6},{"ruleId":"414","severity":1,"message":"415","line":5,"column":9,"nodeType":"416","endLine":5,"endColumn":63},{"ruleId":"438","severity":1,"message":"439","line":22,"column":9,"nodeType":"423","messageId":"440","endLine":22,"endColumn":17},{"ruleId":"441","severity":1,"message":"442","line":2,"column":230,"nodeType":"443","messageId":"444","endLine":2,"endColumn":231},{"ruleId":"421","severity":1,"message":"445","line":22,"column":5,"nodeType":"423","messageId":"424","endLine":22,"endColumn":20},{"ruleId":"421","severity":1,"message":"446","line":25,"column":5,"nodeType":"423","messageId":"424","endLine":25,"endColumn":24},{"ruleId":"425","severity":1,"message":"426","line":275,"column":18,"nodeType":"427","messageId":"428","endLine":275,"endColumn":20},{"ruleId":"425","severity":1,"message":"426","line":280,"column":14,"nodeType":"427","messageId":"428","endLine":280,"endColumn":16},{"ruleId":"425","severity":1,"message":"426","line":284,"column":15,"nodeType":"427","messageId":"428","endLine":284,"endColumn":17},{"ruleId":"425","severity":1,"message":"433","line":285,"column":44,"nodeType":"427","messageId":"428","endLine":285,"endColumn":46},{"ruleId":"425","severity":1,"message":"426","line":289,"column":17,"nodeType":"427","messageId":"428","endLine":289,"endColumn":19},{"ruleId":"425","severity":1,"message":"433","line":290,"column":49,"nodeType":"427","messageId":"428","endLine":290,"endColumn":51},{"ruleId":"434","severity":1,"message":"435","line":307,"column":10,"nodeType":"427","messageId":"436","endLine":307,"endColumn":17},{"ruleId":"434","severity":1,"message":"435","line":307,"column":21,"nodeType":"427","messageId":"436","endLine":307,"endColumn":28},{"ruleId":"425","severity":1,"message":"433","line":580,"column":16,"nodeType":"427","messageId":"428","endLine":580,"endColumn":18},{"ruleId":"425","severity":1,"message":"433","line":580,"column":55,"nodeType":"427","messageId":"428","endLine":580,"endColumn":57},{"ruleId":"438","severity":1,"message":"447","line":620,"column":11,"nodeType":"448","messageId":"440","endLine":620,"endColumn":14},{"ruleId":"425","severity":1,"message":"426","line":844,"column":17,"nodeType":"427","messageId":"428","endLine":844,"endColumn":19},{"ruleId":"438","severity":1,"message":"447","line":854,"column":11,"nodeType":"448","messageId":"440","endLine":854,"endColumn":14},{"ruleId":"425","severity":1,"message":"433","line":993,"column":43,"nodeType":"427","messageId":"428","endLine":993,"endColumn":45},{"ruleId":"438","severity":1,"message":"447","line":1018,"column":11,"nodeType":"448","messageId":"440","endLine":1018,"endColumn":14},{"ruleId":"425","severity":1,"message":"426","line":1157,"column":67,"nodeType":"427","messageId":"428","endLine":1157,"endColumn":69},{"ruleId":"425","severity":1,"message":"426","line":1162,"column":61,"nodeType":"427","messageId":"428","endLine":1162,"endColumn":63},{"ruleId":"438","severity":1,"message":"447","line":1260,"column":11,"nodeType":"448","messageId":"440","endLine":1260,"endColumn":14},{"ruleId":"438","severity":1,"message":"449","line":1260,"column":16,"nodeType":"448","messageId":"440","endLine":1260,"endColumn":18},{"ruleId":"438","severity":1,"message":"447","line":1883,"column":19,"nodeType":"448","messageId":"440","endLine":1883,"endColumn":22},{"ruleId":"438","severity":1,"message":"450","line":1883,"column":24,"nodeType":"448","messageId":"440","endLine":1883,"endColumn":29},{"ruleId":"425","severity":1,"message":"426","line":1929,"column":19,"nodeType":"427","messageId":"428","endLine":1929,"endColumn":21},{"ruleId":"438","severity":1,"message":"451","line":1999,"column":11,"nodeType":"448","messageId":"440","endLine":1999,"endColumn":17},{"ruleId":"438","severity":1,"message":"447","line":1999,"column":19,"nodeType":"448","messageId":"440","endLine":1999,"endColumn":22},{"ruleId":"425","severity":1,"message":"426","line":2055,"column":32,"nodeType":"427","messageId":"428","endLine":2055,"endColumn":34},{"ruleId":"438","severity":1,"message":"451","line":2070,"column":11,"nodeType":"448","messageId":"440","endLine":2070,"endColumn":17},{"ruleId":"438","severity":1,"message":"447","line":2070,"column":19,"nodeType":"448","messageId":"440","endLine":2070,"endColumn":22},{"ruleId":"438","severity":1,"message":"450","line":2070,"column":24,"nodeType":"448","messageId":"440","endLine":2070,"endColumn":29},{"ruleId":"429","severity":1,"message":"430","line":2605,"column":5,"nodeType":"431","messageId":"432","endLine":2622,"endColumn":6},{"ruleId":"438","severity":1,"message":"447","line":2683,"column":11,"nodeType":"448","messageId":"440","endLine":2683,"endColumn":14},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["452"],"no-negated-in-lhs",["453"],"no-unused-vars","'Entity' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '===' and instead saw '=='.","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","'Scene' is defined but never used.","no-redeclare","'angleRad' is already defined.","redeclared","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'getPooledVector' is assigned a value but never used.","'getPooledQuaternion' is assigned a value but never used.","'NAF' is already defined.","Block","'io' is already defined.","'THREE' is already defined.","'AFRAME' is already defined.","no-global-assign","no-unsafe-negation"]