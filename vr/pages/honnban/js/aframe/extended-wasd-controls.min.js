AFRAME.registerComponent("extended-wasd-controls",{schema:{moveForwardKey:{type:"string",default:"W"},moveBackwardKey:{type:"string",default:"S"},moveLeftKey:{type:"string",default:"A"},moveRightKey:{type:"string",default:"D"},moveUpKey:{type:"string",default:"R"},moveDownKey:{type:"string",default:"F"},turnLeftKey:{type:"string",default:"Q"},turnRightKey:{type:"string",default:"E"},lookUpKey:{type:"string",default:"T"},lookDownKey:{type:"string",default:"G"},flyEnabled:{type:"boolean",default:!0},turnEnabled:{type:"boolean",default:!0},lookEnabled:{type:"boolean",default:!0},maxLookEnabled:{type:"boolean",default:!0},maxLookAngle:{type:"number",default:60},moveSpeed:{type:"number",default:1},turnSpeed:{type:"number",default:30},lookSpeed:{type:"number",default:30},inputType:{type:"string",default:"keyboard"}},convertKeyName:function(e){return" "==e?"Space":1==e.length?e.toUpperCase():e},registerKeyDown:function(e){this.keyPressedSet.has(e)||this.keyPressedSet.add(e)},registerKeyUp:function(e){this.keyPressedSet.delete(e)},isKeyPressed:function(e){return this.keyPressedSet.has(e)},init:function(){this.keyPressedSet=new Set;let e=this;document.addEventListener("keydown",function(t){e.registerKeyDown(e.convertKeyName(t.key))}),document.addEventListener("keyup",function(t){e.registerKeyUp(e.convertKeyName(t.key))}),this.moveVector=new THREE.Vector3(0,0,0),this.movePercent=new THREE.Vector3(0,0,0),this.rotateVector=new THREE.Vector2(0,0),this.rotatePercent=new THREE.Vector2(0,0),this.upVector=new THREE.Vector3(0,1,0),this.turnAngle=0,this.lookAngle=0,this.lookControls=this.el.components["look-controls"],this.el.object3D.rotation.order="YXZ"},tick:function(e,t){let s=t/1e3*this.data.moveSpeed,o=t/1e3*THREE.Math.degToRad(this.data.turnSpeed),i=t/1e3*THREE.Math.degToRad(this.data.lookSpeed),n=THREE.Math.degToRad(this.data.maxLookAngle);this.lookControls||("keyboard"==this.data.inputType&&(this.rotatePercent.set(0,0),this.isKeyPressed(this.data.lookUpKey)&&(this.rotatePercent.x+=1),this.isKeyPressed(this.data.lookDownKey)&&(this.rotatePercent.x-=1),this.isKeyPressed(this.data.turnLeftKey)&&(this.rotatePercent.y+=1),this.isKeyPressed(this.data.turnRightKey)&&(this.rotatePercent.y-=1),this.isKeyPressed(this.data.lookUpKey)&&this.isKeyPressed(this.data.lookDownKey)&&(this.lookAngle*=.9)),this.data.lookEnabled&&(this.lookAngle+=this.rotatePercent.x*i,this.el.object3D.rotation.x=this.lookAngle),this.data.turnEnabled&&(this.turnAngle+=this.rotatePercent.y*o,this.el.object3D.rotation.y=this.turnAngle),this.data.maxLookEnabled&&(this.lookAngle>n&&(this.lookAngle=n),this.lookAngle<-n&&(this.lookAngle=-n)));let a=this.el.object3D.rotation.y,r=Math.cos(a),d=Math.sin(a);"keyboard"==this.data.inputType&&(this.movePercent.set(0,0,0),this.isKeyPressed(this.data.moveForwardKey)&&(this.movePercent.z+=1),this.isKeyPressed(this.data.moveBackwardKey)&&(this.movePercent.z-=1),this.isKeyPressed(this.data.moveRightKey)&&(this.movePercent.x+=1),this.isKeyPressed(this.data.moveLeftKey)&&(this.movePercent.x-=1),this.data.flyEnabled&&(this.isKeyPressed(this.data.moveUpKey)&&(this.movePercent.y+=1),this.isKeyPressed(this.data.moveDownKey)&&(this.movePercent.y-=1))),this.moveVector.set(-d*this.movePercent.z+r*this.movePercent.x,1*this.movePercent.y,-r*this.movePercent.z-d*this.movePercent.x).multiplyScalar(s),this.el.object3D.position.add(this.moveVector)}});